{"version":3,"file":"texts.css","sources":["base/texts.scss","_variables.scss","mixins/_mixins.scss","mixins/_media-queries.scss","mixins/_radius-shadow-gradient.scss","mixins/_button.scss","mixins/_label.scss","mixins/bourbon/_bourbon.scss","mixins/bourbon/bourbon/helpers/_buttons-list.scss","mixins/bourbon/bourbon/helpers/_scales.scss","mixins/bourbon/bourbon/helpers/_text-inputs-list.scss","mixins/bourbon/bourbon/settings/_settings.scss","mixins/bourbon/bourbon/validators/_contains.scss","mixins/bourbon/bourbon/validators/_contains-falsy.scss","mixins/bourbon/bourbon/validators/_is-color.scss","mixins/bourbon/bourbon/validators/_is-length.scss","mixins/bourbon/bourbon/validators/_is-number.scss","mixins/bourbon/bourbon/validators/_is-size.scss","mixins/bourbon/bourbon/utilities/_assign-inputs.scss","mixins/bourbon/bourbon/utilities/_compact-shorthand.scss","mixins/bourbon/bourbon/utilities/_directional-property.scss","mixins/bourbon/bourbon/utilities/_fetch-bourbon-setting.scss","mixins/bourbon/bourbon/utilities/_font-source-declaration.scss","mixins/bourbon/bourbon/utilities/_gamma.scss","mixins/bourbon/bourbon/utilities/_lightness.scss","mixins/bourbon/bourbon/utilities/_contrast-ratio.scss","mixins/bourbon/bourbon/utilities/_unpack-shorthand.scss","mixins/bourbon/bourbon/library/_border-color.scss","mixins/bourbon/bourbon/library/_border-radius.scss","mixins/bourbon/bourbon/library/_border-style.scss","mixins/bourbon/bourbon/library/_border-width.scss","mixins/bourbon/bourbon/library/_buttons.scss","mixins/bourbon/bourbon/library/_clearfix.scss","mixins/bourbon/bourbon/library/_contrast-switch.scss","mixins/bourbon/bourbon/library/_ellipsis.scss","mixins/bourbon/bourbon/library/_font-face.scss","mixins/bourbon/bourbon/library/_font-stacks.scss","mixins/bourbon/bourbon/library/_hide-text.scss","mixins/bourbon/bourbon/library/_hide-visually.scss","mixins/bourbon/bourbon/library/_margin.scss","mixins/bourbon/bourbon/library/_modular-scale.scss","mixins/bourbon/bourbon/library/_overflow-wrap.scss","mixins/bourbon/bourbon/library/_padding.scss","mixins/bourbon/bourbon/library/_position.scss","mixins/bourbon/bourbon/library/_prefixer.scss","mixins/bourbon/bourbon/library/_shade.scss","mixins/bourbon/bourbon/library/_size.scss","mixins/bourbon/bourbon/library/_strip-unit.scss","mixins/bourbon/bourbon/library/_text-inputs.scss","mixins/bourbon/bourbon/library/_timing-functions.scss","mixins/bourbon/bourbon/library/_tint.scss","mixins/bourbon/bourbon/library/_triangle.scss","mixins/bourbon/bourbon/library/_value-prefixer.scss","mixins/_border.scss"],"sourcesContent":["@import '../variables';\n@import '../mixins/mixins';\na {\n  color: $primary-color;\n  &:hover {\n    opacity: 0.8;\n    color: $primary-color;\n  }\n  &:focus {\n    outline: 0;\n}\n}\n.text-capitalize {\n  text-transform: capitalize !important;\n}\n.text-uppercase {\n  text-transform: uppercase !important;\n}\n.text-lowercase {\n  text-transform: lowercase !important;\n}\n.text-sentencecase {\n  text-transform: lowercase !important;\n  &::first-letter {\n    text-transform: uppercase !important;\n  }\n}\n.text-inherit {\n  text-transform: inherit !important;\n}\n.ellipsis{\n  white-space: nowrap; \n  overflow: hidden;\n  text-overflow: ellipsis;\n  cursor: pointer;\n}\n.break-word {\n  word-break: break-word;\n}\n.white-space-nowrap {\n  white-space: nowrap !important;\n}\n.font-weight-bold {\n  font-weight: bold !important;;\n}\n.font-weight-normal {\n  font-weight: normal !important;;\n}\n.font-italic {\n  font-style: italic;\n}\n.cursor-text {\n  cursor: text !important;\n}\n.cursor-pointer {\n  cursor: pointer !important;\n}\n.va-bottom {\n  vertical-align: bottom !important;\n}\n.va-middle {\n  vertical-align: middle;\n}\n.text-center {\n  text-align: center !important;\n}\n\n*[dir=\"ltr\"] {\n  .text-right {\n    text-align: right;\n  }\n  .text-left {\n    text-align: left;\n  }\n}\n\n*[dir=\"rtl\"] {\n  .text-right {\n    text-align: left;\n  }\n  .text-left {\n    text-align: right;\n  }\n}","/* css3 variable & sass variables */\n:root {\n  --font-stack-en: 'Noto Sans','Noto Sans Devanagari','Noto Sans Tamil','Noto Sans Bengali','Noto Sans Malayalam','Noto Sans Gurmukhi','Noto Sans Gujarati','Noto Sans Telugu','Noto Sans Kannada','Noto Sans Oriya','Noto Nastaliq Urdu',-apple-system,BlinkMacSystemFont,'Segoe UI',Roboto,Oxygen-Sans,Ubuntu,Cantarell,'Helvetica Neue',sans-serif;\n  --font-stack-hi: 'Noto Sans Devanagari','Noto Sans','Noto Sans Tamil','Noto Sans Bengali','Noto Sans Malayalam','Noto Sans Gurmukhi','Noto Sans Gujarati','Noto Sans Telugu','Noto Sans Kannada','Noto Sans Oriya','Noto Nastaliq Urdu',-apple-system,BlinkMacSystemFont,'Segoe UI',Roboto,Oxygen-Sans,Ubuntu,Cantarell,'Helvetica Neue',sans-serif;\n  --font-stack-ur: 'Noto Sans','Noto Nastaliq Urdu','Noto Sans Devanagari','Noto Sans Tamil','Noto Sans Bengali','Noto Sans Malayalam','Noto Sans Gurmukhi','Noto Sans Gujarati','Noto Sans Telugu','Noto Sans Kannada','Noto Sans Oriya',-apple-system,BlinkMacSystemFont,'Segoe UI',Roboto,Oxygen-Sans,Ubuntu,Cantarell,'Helvetica Neue',sans-serif;\n  \n  --blue: #024f9d;\n  --black: #000000;\n  --green: #008840;\n  --orange: #e55a28;\n  --red: #ff4558;\n  --white: #ffffff;\n  --indigo: #6610f2;\n  --purple: #6f42c1;\n  --pink: #e83e8c;\n  --yellow: #ffc107;\n  --teal: #20c997;\n  --cyan: #17a2b8;\n\n  --gray-hs: 0,0%;\n  --gray: hsl(var(--gray-hs),20%);\n  --gray-0: hsl(var(--gray-hs),95%); // place holder active bg #F2F2F2\n  --gray-100: hsl(var(--gray-hs),80%); // disable btn bg, icon color #CCCCCC\n  --gray-200: hsl(var(--gray-hs),60%); // disable text, place holder text #999999\n  --gray-300: hsl(var(--gray-hs),59%); // sub heading 2 #969696\n  --gray-400: hsl(var(--gray-hs),40%); // sub heading #666666\n  --gray-800: var(--gray); // text color #333333\n\n  --primary-color: var(--blue);\n  --secondary-color: var(--green);\n  --tertiary-color: var(--orange);\n\n  --primary-0: #F3F7FA; // bg\n  --primary-100: #EDF4F9; // default button bg\n  --primary-200: #80A7CE; // divider\n  --primary-250:#D3E7F4; //pagination bg color\n  --primary-300: #7AB4EE; // outline, focus fields\n  --primary-400: var(--primary-color); // button bg, heading, table titles, links, toggles \n  --primary-600: #005391; // on press\n  --primary-800: #002E50; // hover\n\n  --secondary-0: #E1FFDF; // toast bg, label\n  --secondary-100: #00C786; // buttong bg, toast\n  --secondary-200: #07bc81; // button bg\n  --secondary-400: var(--secondary-color); // hover\n\n  --tertiary-0: #FEEDD7; // toast bg, label\n  --tertiary-100: #FFA11D; // buttong bg, toast\n  --tertiary-400: var(--tertiary-color); // icon, label, notification bg\n\n  --red-0: #FBCCD1; // toast bg\n  --red-100: #FF6979; // buttong bg, toast\n  --red-400: var(--red); // icon color, lable, notification\n}\n\n// Variables\n$font-stack-en: var(--font-stack-en);\n$font-stack-hi: var(--font-stack-hi);\n$font-stack-ur: var(--font-stack-ur);\n\n// Base Colors\n$blue: var(--blue);\n$black: var(--black);\n$green: var(--green);\n$orange: var(--orange);\n$red: var(--red);\n$white: var(--white);\n$indigo: var(--indigo);\n$purple: var(--purple);\n$pink: var(--pink);\n$yellow: var(--yellow);\n$teal: var(--teal);\n$cyan: var(--cyan);\n$gray: var(--gray);\n\n// brand Colors\n$primary-color: var(--primary-color);\n$secondary-color: var(--secondary-color);\n$tertiary-color: var(--tertiary-color);\n// Neutral Colors\n$white-color: var(--white);\n// gray colors shades \n$gray-0: var(--gray-0); // place holder active bg #F2F2F2\n$gray-100: var(--gray-100); // disable btn bg, icon color #CCCCCC\n$gray-200: var(--gray-200); // disable text, place holder text #999999\n$gray-300: var(--gray-300); // sub heading 2 #969696\n$gray-400: var(--gray-400); // sub heading #666666\n$gray-800: var(--gray-800); // text color #333333\n\n// primary colors shades \n$primary-0: var(--primary-0); // bg\n$primary-100: var(--primary-100); // default button bg\n$primary-200: var(--primary-200); // divider\n$primary-250: var(--primary-250); //pagination bg color\n$primary-300: var(--primary-300); // outline, focus fields\n$primary-400: var(--primary-400); // button bg, heading, table titles, links, toggles \n$primary-600: var(--primary-600); // on press\n$primary-800: var(--primary-800); // hover\n\n// secondary colors shades\n$secondary-0: var(--secondary-0); // toast bg, label\n$secondary-100: var(--secondary-100); // buttong bg, toast\n$secondary-200: var(--secondary-200); // button bg\n$secondary-400: var(--secondary-400); // hover\n\n// tertiary colors shades\n$tertiary-0: var(--tertiary-0); // toast bg, label\n$tertiary-100: var(--tertiary-100); // buttong bg, toast\n$tertiary-400: var(--tertiary-400); // icon, label, notification bg\n\n// red colors shades\n$red-0: var(--red-0); // toast bg\n$red-100: var(--red-100); // buttong bg, toast\n$red-400: var(--red-400); // icon color, lable, notification \n\n// input border width\n$input-border-width: 1px; \n\n// Status Colors\n$info-color: $primary-400;\n$success-color: $secondary-200;\n$warning-color: $tertiary-400;\n$danger-color: $red-100;\n// Settings for the `<body>` element.\n$body-background-color: $primary-0;\n$default-text-color: $gray-800;\n$bg-body: $primary-0;\n$body-color: $gray-800;\n$theme-colors: () !default;\n$theme-colors: map-merge(( \"primary\": $primary-color, \"secondary\": $secondary-color, \"tertiary\": $tertiary-color, \"success\": $success-color, \"info\": $info-color, \"warning\": $warning-color, \"danger\": $danger-color, \"light\": $gray-100, \"dark\": $gray), $theme-colors);\n// Style anchor elements.\n$link-color: theme-color(\"primary\");\n$link-decoration: none;\n//$link-hover-color:        darken($link-color, 15%);\n$link-hover-decoration: underline;\n// Fonts\n// $font-default-size: 14px;\n$font-size-base: 14px; // Assumes the browser default, typically `16px`\n$font-weight-light: 300;\n$font-weight-normal: 400;\n$font-weight-bold: 700;\n$font-weight-base: $font-weight-normal;\n$line-height-base: ($font-size-base + 8);\n$h1-font-size: $font-size-base * 2.286; // 32px\n$h2-font-size: $font-size-base * 2; // 28px\n$h3-font-size: $font-size-base * 1.714; // 24px\n$h4-font-size: $font-size-base * 1.429; // 20px\n$h5-font-size: $font-size-base * 1.143; // 16px\n$h6-font-size: $font-size-base * 1; // 14px\n$font-size-lg: $h4-font-size; //20px\n$font-size-md: $h5-font-size; // 16px\n$font-size-normal: ($font-size-base * 1); // 14px\n$font-size-sm: ($font-size-base * 0.8571); // 12px\n$font-size-xs: ($font-size-base * 0.7143); // 10px\n$p-font-size: $font-size-normal;\n// spaces\n$base-block-space: 8px;\n$block-padding-y-x: ($base-block-space * 1) ($base-block-space * 2); // any block default spacing 16px\n$block-padding-xy: ($base-block-space * 2); // top right bottom left spacing\n$block-padding-x: ($base-block-space * 2) ($base-block-space * 2); // left right spacing\n$block-padding-y: ($base-block-space * 1) ($base-block-space * 1); // top bottom spacing\n$block-margin-xl-minus: -($base-block-space * 2); // minus margin 16px left\n$block-margin-xr-minus: -($base-block-space * 2); // minus margin 16px right\n$block-margin-xr-minus: -($base-block-space * 2) -($base-block-space * 2); // minus margin 16px left & right\n// width heights\n$base-btn-xs-height: ($base-block-space * 3);\n$base-btn-normal-height: ($base-block-space * 4);\n$base-btn-sm-height: ($base-block-space * 5);\n$base-btn-md-height: ($base-block-space * 6);\n$base-btn-lg-height: ($base-block-space * 7);\n$base-btn-fluid: 100%;\n// modal component\n$sb-modal-header-bg: $primary-400;\n$sb-modal-header-color: $white-color;\n$sb-modal-header-padding:($base-block-space * 1) ($base-block-space * 2);\n$sb-modal-header-height:($base-block-space * 5);\n$sb-modal-fs-header-height:($base-block-space * 7);\n$sb-modal-header-line-height: ($h5-font-size + 8);\n$sb-modal-content-padding: $block-padding-xy;\n$sb-modal-actions-bg: $white-color;\n$sb-modal-actions-padding:($base-block-space * 1) ($base-block-space * 2);\n$sb-modal-actions-height:($base-block-space * 7);\n$sb-modal-header-bg-success: $secondary-200;\n$sb-modal-header-bg-warning: $tertiary-100;\n$sb-modal-header-bg-error: $red-400;\n$sb-modal-header-fsize: $h5-font-size;\n$sb-modal-small-width:480px;\n$sb-modal-normal-width:720px;\n$sb-modal-large-width:900px;\n$sb-modal-corner-radius:8px;\n//button component\n\n// Search Component\n$sb-search-box-shadow-color: $primary-300;\n$sb-search-input-font-size: $font-size-sm;\n$sb-search-border-color: $primary-300;\n$sb-search-btn-bg: $primary-100;\n$sb-search-btn-font-size: $font-size-sm;\n$sb-search-close-btn-bg: $blue;\n$sb-search-close-btn-color: $white;\n\n//form components\n\n/* sb-field */\n$sb-field-margin-bottom: ($base-block-space * 1);\n$sb-field-disabled-background: $gray-0;\n$sb-field-disabled-border: $input-border-width solid $gray-0;\n$sb-field-disabled-opacity: 0.45;\n\n/* sb-input */\n$sb-input-background-color: $white-color;\n$sb-input-font-size: 0.8571rem;\n$sb-input-line-height: 1.5;\n$sb-input-padding: 0.5714rem;\n$sb-input-color: #333;\n$sb-input-border-radius: .2143rem;\n$sb-input-border-normal: $input-border-width solid $gray-200;\n$sb-input-border-focus: $input-border-width solid $primary-600;\n$sb-input-border-hover: $input-border-width solid $primary-300; \n$sb-input-border-error: $input-border-width solid $red-400;\n$sb-input-border-success: $input-border-width solid $secondary-200;\n\n/* sb-input label and text */\n$sb-error-text: $red-400;\n$sb-success-text: $secondary-200;\n$sb-label-font-size: 0.8571rem;\n\n// Buttons\n\n// Dashed Buttons\n$sb-btn-dashed-border: 0.5 solid $primary-color;\n$sb-btn-dashed-background-color: $white-color;\n$sb-btn-dashed-color: $primary-400;\n\n// Button groups\n$sb-btn-group-border-width: 1px;\n$sb-btn-group-border-color: $gray-100; \n$sb-btn-group-btn-background: $white-color;\n$sb-btn-group-btn-color: $primary-400;\n$sb-btn-group-btn-active-background-color: $primary-100;\n\n// Dropdown\n$sb-dropdown-border-color: $gray-200;\n$sb-dropdown-border-focus: $primary-600;\n$sb-dropdown-border-hover: $primary-300;\n$sb-dropdown-min-height: 2.44em;\n$sb-dropdown-border-radius: 3px;\n$sb-dropdown-border: $input-border-width solid $sb-dropdown-border-color;\n$sb-dropdown-active-item: #333;\n$sb-multi-select-dropdown-icon-font-size: 1.3em;\n$sb-dropdown-label-font-size: 0.8em;\n$sb-selection-dropdown-min-height: ($base-block-space * 4);\n$sb-selection-dropdown-padding: ($base-block-space/2) ($base-block-space/1);\n$sb-multiple-dropdown-label-font-size:  0.72rem;\n$sb-multiple-dropdown-label-margin-right: 4px;\n$sb-multiple-dropdown-text-margin: .23238095em 0 .23238095em .64285714em;\n$sb-multiple-dropdown-text-font-size: 11px;\n$sb-selection-line-height: 18px;\n\n// Tabs\n$sb-tabs-border-active-color: $primary-600;\n$sb-tabs-color: $primary-600;\n$sb-pointing-tabs-border: #dededf; //TODO design team need to add this in color scheme\n$sb-pointing-tabs-min-width: 2.285714em;\n$sb-pointing-tabs-border-radius: 4px;\n\n// Radio buttons \n$sb-radio-btn-border: 1px; //width of the border\n$sb-radio-btn-border-radius: 100%;\n$sb-radio-btn-disabled-opacity: 0.5;\n$sb-radio-btn-border-color: $primary-300;\n$sb-radio-btn-border-disabled-color: $gray-100;\n$sb-radio-btn-label-color: $gray-200;\n$sb-radio-btn-backgroud-before-checked: $white-color;\n$sb-radio-btn-backgroud-after-checked: $primary-300;\n\n// Checkbox\n$sb-checkbox-primary-background: $primary-color;\n$sb-checkbox-secondary-background: $secondary-100;\n$sb-checkbox-warning-background: $tertiary-100;\n$sb-checkbox-error-background: $red-100;\n$sb-radio-btn-primary-border: $primary-color;\n$sb-radio-btn-secondary-border: $secondary-100;\n$sb-radio-btn-warning-border: $tertiary-100;\n$sb-radio-btn-error-border: $red-100;\n$sb-checkbox-border-width: 1px; \n$sb-checkbox-background-color: $secondary-100;\n$sb-checkbox-label-font-size: 0.8571rem;\n$sb-checkbox-border-radius:4px;\n$sb-checkbox-after-checked-color: $white-color;\n$sb-checkbox-before-checked-background-color: $white-color;\n$sb-radio-btn-border-color: $primary-300;\n\n// Page section component\n$sb-page-section-font-size: $h5-font-size;\n$sb-page-section-header-content-space: 0 0 ($base-block-space * 3) 0;\n$sb-page-section-header-content-space-compact: 0 0 ($base-block-space) 0;\n$sb-page-sections-between-space: 0 0 ($base-block-space * 3) 0;\n$sb-page-sections-divider-color: $gray-0 !important;\n\n// Card component\n$sb-card-width: 292px;\n$sb-card-height: 208px;\n$sb-card-body-height: 204px;\n$sb-card-progressbar-height: 4px;\n$sb-card-hover-movement: 3px;\n$sb-card-padding: ($base-block-space * 2) ($base-block-space * 2) ($base-block-space) ($base-block-space * 2);\n$sb-card-border-radius: ($base-block-space / 2);\n$sb-card-border: 0.5px solid #dedede;\n$sb-card-box-shadow: 0 2px 7px 0 rgba(0, 0, 0, 0.16);\n$sb-card-bg-color: $white-color;\n$sb-card-image-height: 92px;\n$sb-card-image-width: 70px;\n$sb-card-image-border-radius: 2px;\n$sb-card-image-border: 0.5px solid $gray-100;\n$sb-card-image-bg-color: $gray-0;\n$sb-card-label-font-size: ($font-size-sm - 1);\n$sb-card-label-color: $primary-color;\n$sb-card-label-border: 1px solid $primary-color;\n$sb-card-label-border-radius: 2px;\n$sb-card-label-padding: ($base-block-space / 2) ($base-block-space);\n$sb-card-label-height: 24px;\n$sb-card-badge-height: 30px;\n$sb-card-badge-width: 30px;\n$sb-card-meta-width: 172px;\n$sb-card-meta-color: $gray-400;\n$sb-card-meta-font-size: $font-size-sm;\n$sb-card-meta-line-height: 17px;\n$sb-card-title-color: $primary-color;\n$sb-card-title-font-size: $h6-font-size;\n$sb-card-title-line-height: ($sb-card-title-font-size * 1.25);\n$sb-card-title-height: ($sb-card-title-line-height * 2);\n$sb-card-title-font-weight: $font-weight-bold;\n$sb-card-title-spacing: ($base-block-space * 2) 0 ($base-block-space * 1) 0;\n$sb-card-meta-org-font-size: $h6-font-size;\n$sb-card-progressbar-border-radius: 0 4px 4px 4px;\n// Tamil\n$sb-card-label-font-size-ta: 9px;\n$sb-card-meta-font-size-ta: 10px;\n$sb-card-title-font-size-ta: $font-size-sm;\n$sb-card-meta-org-font-size-ta: $font-size-sm;\n// Urdu\n$sb-card-label-font-size-ur: 9px;\n$sb-card-meta-font-size-ur: 10px;\n$sb-card-title-font-size-ur: $font-size-sm;\n$sb-card-meta-org-font-size-ur: $font-size-sm;\n\n// tooltip Component\n$tooltip-bg: $gray;\n$tooltip-color: $gray-0;\n$tooltip-content-color: $gray-200;\n$tooltip-content-font-size: $font-size-sm;\n$tooltip-header-font-size: $font-size-sm;\n\n// Topic Picker\n$sb-treePicker-selectionTab-width: 400px;\n$sb-treePicker-selectedTab-width: calc(100% - 400px);\n$sb-treePicker-selectionTab-padding: ($base-block-space * 2);\n$sb-treePicker-selectedTab-padding: ($base-block-space * 2);\n$sb-treePicker-searchbox-max-width: 392px;\n$sb-treePicker-searchbox-tree-space: 0 0 (2*$base-block-space) 0;\n$sb-treePicker-searchbox-width: 100%;\n$sb-treePicker-searchbox-border: 0.5px solid $primary-300;\n$sb-treePicker-searchbox-iconColor-search: #aaa;\n$sb-treePicker-selected-color: $secondary-100;\n$sb-treePicker-tabs-divider-border-color: $gray-100;\n$sb-treePicker-tabs-divider-border-mobile: 0 0 1px 0;\n$sb-treePicker-tabs-divider-border-desktop: 0 1px 0 0;\n$sb-treePicker-tabs-divider-border-desktop-rtl: 0 0 0 1px;\n$sb-treePicker-nodes-between-spacing: 0 0 $base-block-space 0;\n$sb-treePicker-nodes-icon-title-spacing: 0 $base-block-space 0 0;\n$sb-treePicker-nodes-icon-title-spacing-rtl: 0 0 0 $base-block-space;\n$sb-treePicker-checked-nodes-icon-title-spacing: 0 10px 0 0;\n$sb-treePicker-checked-nodes-icon-title-spacing-rtl: 0 0 0 10px;\n$sb-treePicker-nodes-icons-font-size: 10px;\n$sb-treePicker-nodes-icons-line-height: 11px;\n$sb-treePicker-nodes-icons-border-radius: 4px;\n$sb-treePicker-nodes-icons-border: 1px solid $primary-200;\n$sb-treePicker-nodes-icons-padding: 2px;\n$sb-treePicker-nodes-icons-height: ($base-block-space * 2);\n$sb-treePicker-nodes-icons-width: ($base-block-space * 2);\n$sb-treePicker-nodes-icons-color: $primary-200;\n$sb-treePicker-not-selected-node-icons-size: ($base-block-space * 2);\n$sb-treePicker-nodes-name-color: $gray-400;\n$sb-treePicker-opened-node-name-color: $gray-800;\n$sb-treePicker-node-min-height: ($base-block-space * 2);\n$sb-treePicker-nodes-childlist-border: 1px dotted $gray-100;\n$sb-treePicker-nodes-childlist-padding: 0 $base-block-space;\n$sb-treePicker-nodes-childlist-margin: $base-block-space;\n$sb-treePicker-nodes-disabled-opacity: 0.3;\n$sb-treePicker-search-query-highlight-color: $yellow;\n\n// TOC or Collection Tree\n$sb-collectionTree-border-radius: ($base-block-space / 2);\n$sb-collectionTree-border: 1px solid $primary-200;\n$sb-collectionTree-padding: ($base-block-space * 2);\n$sb-collectionTree-margin: $base-block-space 0 0 0;\n$sb-collectionTree-background-color: $white-color;\n$sb-collectionTree-title-color: $gray-800;\n$sb-collectionTree-title-font-size: $h6-font-size;\n$sb-collectionTree-title-line-height: 20px;\n$sb-collectionTree-title-font-weight: 400;\n$sb-collectionTree-active-title-color: $primary-color;\n$sb-collectionTree-active-title-font-weight: bold;\n$sb-collectionTree-title-icon-color: $tertiary-100;\n$sb-collectionTree-title-icon-font-size: 20px;\n$sb-collectionTree-title-icon-line-height: 20px;\n$sb-collectionTree-title-icon-height: 20px;\n$sb-collectionTree-title-icon-font-weight: 500;\n$sb-collectionTree-title-toggle-icon-color: $primary-color;\n$sb-collectionTree-title-toggle-icon-font-size: $font-size-sm;\n$sb-collectionTree-title-toggle-icon-line-height: 20px;\n$sb-collectionTree-title-toggle-icon-height: 20px;\n$sb-collectionTree-title-toggle-icon-font-weight: 500;\n$sb-collectionTree-disabled-border: 1px solid $gray-100;\n$sb-collectionTree-disabled-title-icon-color: $gray-100;\n\n// Fancy Tree\n$sb-fancyTree-margin-ltr: 0 0 0 ($base-block-space * 1.25);\n$sb-fancyTree-margin-rtl: 0 ($base-block-space * 1.25) 0 0;\n$sb-fancyTree-padding: ($base-block-space * 2) 0 0 0;\n$sb-fancyTree-list-border-color: $primary-200;\n$sb-fancyTree-list-border-width: 1px;\n$sb-fancyTree-list-item-margin: 0 0 (2 * $base-block-space) 0;\n$sb-fancyTree-list-item-padding-ltr: 0 0 0 ($base-block-space * 1.75);\n$sb-fancyTree-list-item-padding-rtl: 0 ($base-block-space * 1.75) 0 0;\n$sb-fancyTree-list-item-border-text-spacing: ($base-block-space * 1.75);\n$sb-fancyTree-list-item-icon-size: 20px;\n$sb-fancyTree-default-list-item-icon-color: $tertiary-100;\n$sb-fancyTree-completed-list-item-icon-color: $success-color;\n$sb-fancyTree-inprogress-list-item-icon-color: $primary-color;\n$sb-fancyTree-disabled-list-item-icon-color: $gray-100;\n$sb-fancyTree-list-item-title-padding: 0 ($base-block-space);\n$sb-fancyTree-list-item-title-font-size: $h6-font-size;\n$sb-fancyTree-list-item-title-commingSoonMessage-spacing: 0 ($base-block-space / 2);\n\n/* circular list*/\n$sb-circular-list-item-padding-ltr:  ($base-block-space * 1)  0  ($base-block-space * 1)  ($base-block-space * 4);\n$sb-circular-list-item-padding-rtl:  ($base-block-space * 1)  ($base-block-space * 4)  ($base-block-space * 1)  0; \n$sb-circular-list-item-font-size:  ($base-block-space * 2);\n$sb-circular-list-item-circle-color: $primary-color;\n$sb-circular-list-item-circle-border-radius: 50%;\n$sb-circular-list-item-circle-width: 12px;\n$sb-circular-list-item-circle-height: 12px;\n$sb-circular-list-item-circle-top: 12px;\n\n/* description list */\n$sb-description-list-key-color: $gray-400;\n$sb-description-list-key-font-size: ($base-block-space * 2);\n$sb-description-list-value-color: $gray-400;\n$sb-description-list-value-font-size: ($base-block-space * 2);\n$sb-description-list-value-margin-left: ($base-block-space * 1);\n$sb-description-list-value-margin-right: ($base-block-space * 1);\n$sb-description-list-key-small-font-size: 14px;\n$sb-description-list-value-small-font-size: 14px;\n\n//banner\n$sb-banner-padding: ($base-block-space * 3);\n$sb-banner-border-radius: 4px 4px 0 0;\n$sb-banner-background-color:rgba(2,79,157,0.1);\n$sb-banner-box-shadow: 0 -4px 7px 0 rgba(0,0,0,0.25); \n$sb-banner-heading-font-size: 18px;\n$sb-banner-heading-color: $primary-color;\n$sb-banner-close-icon-width:  ($base-block-space * 2);\n$sb-banner-close-icon-margin-right: ($base-block-space * 3);\n$sb-banner-close-icon-font-size: ($base-block-space * 3);\n$sb-banner-close-icon-margin-left:  ($base-block-space * 3);\n\n//multiline list\n$multiline-list-key-font-size: 11px;\n$multiline-list-key-font-color: $gray-400;\n$multiline-list-value-font-size: 11px;\n$multiline-list-value-font-color: $gray-400;\n\n// bordered-list--adds border around the list\n$sb-bordered-list-border: 1px solid $gray-100;\n$sb-bordered-list-border-radius: 4px 4px 0 0;\n$sb-bordered-list-item-font-size:($base-block-space * 2);\n$sb-bordered-list-item-padding: ($base-block-space * 2) ($base-block-space * 3);\n$sb-bordered-list-item-border-bottom: 1px solid $gray-100;\n$sb-bordered-list-item-border-background: #F7F7F7;\n$sb-bordered-list-item-title-font-size: 14px;\n$sb-bordered-list-item-title-color: $primary-color;\n$sb-bordered-list-item-title-extra-font-size:12px;\n$sb-bordered-list-item-title-extra-color: $gray-800;\n$sb-bordered-list-item-heading-font-size: 14px; \n$sb-bordered-list-item-heading-color: $gray-800;\n$sb-bordered-list-item-subheading-font-size: 12px;\n$sb-bordered-list-item-subheading-color: $gray-400;\n$sb-bordered-list-item-first-child-padding: ($base-block-space * 1) ($base-block-space * 2);\n$sb-bordered-list-item-first-child-background: $white-color;\n\n// label \n$sb-label-status-width: 130px;\n$sb-label-status-height: 32px;\n$sb-label-status-padding: 5px;\n$sb-label-status-font-size: 14px;\n$sb-label-status-before-border: 1px solid teal;\n$sb-label-status-before-top: -11%;\n$sb-label-status-before-bottom: -11%;\n$sb-label-status-before-left: -2%;\n$sb-label-status-before-right: -3%;\n$sb-label-status-before-border-bottom-left-radius: 10px;\n$sb-label-status-before-border-bottom-right-radius: 10px;\n$sb-label-status-success-border-color: $secondary-0;\n$sb-label-status-success-background-color: $secondary-0;\n$sb-label-status-error-background-color: $tertiary-0;\n$sb-label-status-error-border-color: $tertiary-0;\n$sb-label-status-error-color:  $tertiary-color;\n$sb-label-status-success-color: $secondary-color;\n$sb-label-status-indicator-height: 8px;\n$sb-label-status-indicator-width: 8px;\n$sb-label-status-indicator-border-radius: 50%;\n$sb-label-status-indicator-margin-right: 4px;\n$sb-label-status-indicator-success-background: $secondary-color;\n$sb-label-status-indicator-error-background: $tertiary-color;\n\n// Filters\n$sb-prominent-filter-background-color: $white-color;\n$sb-prominent-filter-padding: $base-block-space*2 $base-block-space*2;\n$sb-prominent-filter-header-font-weight: bold;\n$sb-prominent-filter-header-margin: ($base-block-space) 0 ($base-block-space*2) 0;\n$sb-prominent-filter-header-color: $primary-color;\n$sb-prominent-filter-field-width-below-sm: 50%;\n$sb-prominent-filter-field-width-above-sm: 33.3333%;\n$sb-prominent-filter-field-width-above-md: 25%;\n$sb-prominent-filter-field-width-above-lg: 20%;\n$sb-prominent-filter-field-bottom-spacing: ($base-block-space*2);\n$sb-prominent-filter-field-side-spacing: ($base-block-space*2);\n$sb-prominent-filter-field-label-font-size: 14px;\n$sb-prominent-filter-field-label-font-weight: normal;\n$sb-prominent-filter-field-label-color: $gray-800;\n$sb-prominent-filter-field-label-margin: 0 0 $base-block-space 0;\n$sb-prominent-filter-field-font-size: 12px;\n$sb-prominent-filter-field-color: #4a4a4a;\n$sb-prominent-filter-field-border: 1px solid #999999;\n$sb-prominent-filter-field-border-radius: 3px;\n$sb-prominent-filter-field-height: 32px;\n$sb-prominent-filter-field-width: 100%;\n$sb-prominent-filter-field-input-padding: 8px;\n$sb-prominent-filter-dropdown-font-size: 12px;\n$sb-prominent-filter-dropdown-header-font-weight: 500;\n$sb-prominent-filter-dropdown-item-active-color: $primary-color;\n$sb-prominent-filter-dropdown-item-active-font-weight: 700;\n\n// To clean\n$text-gray: $gray-100;\n$signup-btn-bg-not-active-color: $gray-200;\n$signup-thankyou-text-color: $gray-400;\n$form-input-border-color: $gray-300;\n$qr-btn:  $gray-100;\n$signup-btn-bg-active-color: $secondary-400;\n$form-input-border-active-color: $primary-400;\n\n/* description list */\n$sb-description-list-key-color: $gray-400;\n$sb-description-list-key-font-size: ($base-block-space * 2);\n$sb-description-list-value-color: $gray-400;\n$sb-description-list-value-font-size: ($base-block-space * 2);\n$sb-description-list-value-margin-left: ($base-block-space * 1);\n$sb-description-list-value-margin-right: ($base-block-space * 1);\n$sb-description-list-key-small-font-size: 14px;\n$sb-description-list-value-small-font-size: 14px;\n//banner\n$sb-banner-padding: ($base-block-space * 3);\n$sb-banner-border-radius: 0 0 4px 4px;\n$sb-banner-background-color:#dae6f1;\n$sb-banner-box-shadow: 0 -4px 7px 0 rgba(0,0,0,0.25); \n$sb-banner-heading-font-size: 18px;\n$sb-banner-heading-color: $primary-color;\n$sb-banner-close-icon-width:  ($base-block-space * 2);\n$sb-banner-close-icon-margin-right: ($base-block-space * 3);\n$sb-banner-close-icon-font-size: ($base-block-space * 3);\n$sb-banner-close-icon-margin-left:  ($base-block-space * 3);\n\n// lists\n\n/* circular list*/\n$sb-circular-list-item-padding-ltr:  ($base-block-space * 1)  0  ($base-block-space * 1)  ($base-block-space * 4);\n$sb-circular-list-item-padding-rtl:  ($base-block-space * 1)  ($base-block-space * 4)  ($base-block-space * 1)  0; \n$sb-circular-list-item-font-size:  ($base-block-space * 2);\n$sb-circular-list-item-circle-color: $primary-color;\n$sb-circular-list-item-circle-border-radius: 50%;\n$sb-circular-list-item-circle-width: 12px;\n$sb-circular-list-item-circle-height: 12px;\n$sb-circular-list-item-circle-top: 12px;\n\n/* description list */\n$sb-description-list-key-color: $gray-400;\n$sb-description-list-key-font-size: ($base-block-space * 2);\n$sb-description-list-value-color: $gray-400;\n$sb-description-list-value-font-size: ($base-block-space * 2);\n$sb-description-list-value-margin-left: ($base-block-space * 1);\n$sb-description-list-value-margin-right: ($base-block-space * 1);\n$sb-description-list-key-small-font-size: 14px;\n$sb-description-list-value-small-font-size: 14px;\n\n//multiline list\n$multiline-list-key-font-size: 11px;\n$multiline-list-key-font-color: $gray-400;\n$multiline-list-value-font-size: 11px;\n$multiline-list-value-font-color: $gray-400;\n\n// bordered-list--adds border around the list\n\n$sb-bordered-list-border: 1px solid $gray-100;\n$sb-bordered-list-border-radius: 4px 4px 0 0;\n$sb-bordered-list-item-font-size:($base-block-space * 2);\n$sb-bordered-list-item-padding: ($base-block-space * 2) ($base-block-space * 3);\n$sb-bordered-list-item-border-bottom: 1px solid $gray-100;\n$sb-bordered-list-item-border-background: #F7F7F7;\n$sb-bordered-list-item-title-font-size: 14px;\n$sb-bordered-list-item-title-color: $primary-color;\n$sb-bordered-list-item-title-extra-font-size:12px;\n$sb-bordered-list-item-title-extra-color: $gray-800;\n$sb-bordered-list-item-heading-font-size: 14px; \n$sb-bordered-list-item-heading-color: $gray-800;\n$sb-bordered-list-item-subheading-font-size: 12px;\n$sb-bordered-list-item-subheading-color: $gray-400;\n$sb-bordered-list-item-first-child-padding: ($base-block-space * 1) ($base-block-space * 2);\n$sb-bordered-list-item-first-child-background: $white-color;\n","@import \"media-queries\";\n@import \"radius-shadow-gradient\";\n@import \"button\";\n@import \"label\";\n@import \"bourbon/bourbon\";\n@import \"border\";\n","//\n//  MEDIA QUERIES\n//––––––––––––––––––––––––––––––––––––––––––––––––––\n\n// A map of breakpoints.\n$breakpoints: (\n  xs: 576px,\n  sm: 768px,\n  md: 992px,\n  lg: 1280px,\n  xl: 1440px,\n  xxl: 1600px,\n  xxxl: 1920px\n);\n\n\n//\n//  RESPOND ABOVE\n//––––––––––––––––––––––––––––––––––––––––––––––––––\n\n// @include respond-above(sm) {}\n@mixin respond-above($breakpoint) {\n\n  // If the breakpoint exists in the map.\n  @if map-has-key($breakpoints, $breakpoint) {\n\n    // Get the breakpoint value.\n    $breakpoint-value: map-get($breakpoints, $breakpoint);\n\n    // Write the media query.\n    @media (min-width: $breakpoint-value) {\n      @content;\n    }\n  \n  // If the breakpoint doesn't exist in the map.\n  } @else {\n\n    // Log a warning.\n    @warn 'Invalid breakpoint: #{$breakpoint}.';\n  }\n}\n\n\n//\n//  RESPOND BELOW\n//––––––––––––––––––––––––––––––––––––––––––––––––––\n\n// @include respond-below(sm) {}\n@mixin respond-below($breakpoint) {\n\n  // If the breakpoint exists in the map.\n  @if map-has-key($breakpoints, $breakpoint) {\n\n    // Get the breakpoint value.\n    $breakpoint-value: map-get($breakpoints, $breakpoint);\n\n    // Write the media query.\n    @media (max-width: ($breakpoint-value - 1)) {\n      @content;\n    }\n  \n  // If the breakpoint doesn't exist in the map.\n  } @else {\n\n    // Log a warning.\n    @warn 'Invalid breakpoint: #{$breakpoint}.';\n  }\n}\n\n\n//\n//  RESPOND BETWEEN\n//––––––––––––––––––––––––––––––––––––––––––––––––––\n\n// @include respond-between(sm, md) {}\n@mixin respond-between($lower, $upper) {\n\n  // If both the lower and upper breakpoints exist in the map.\n  @if map-has-key($breakpoints, $lower) and map-has-key($breakpoints, $upper) {\n\n    // Get the lower and upper breakpoints.\n    $lower-breakpoint: map-get($breakpoints, $lower);\n    $upper-breakpoint: map-get($breakpoints, $upper);\n\n    // Write the media query.\n    @media (min-width: $lower-breakpoint) and (max-width: ($upper-breakpoint - 1)) {\n      @content;\n    }\n  \n  // If one or both of the breakpoints don't exist.\n  } @else {\n\n    // If lower breakpoint is invalid.\n    @if (map-has-key($breakpoints, $lower) == false) {\n\n      // Log a warning.\n      @warn 'Your lower breakpoint was invalid: #{$lower}.';\n    }\n\n    // If upper breakpoint is invalid.\n    @if (map-has-key($breakpoints, $upper) == false) {\n\n      // Log a warning.\n      @warn 'Your upper breakpoint was invalid: #{$upper}.';\n    }\n  }\n}\n","//Cross browser CSS3 mixins\n\n@mixin box-shadow($left, $top, $radius, $color) {\n\tbox-shadow: $left $top $radius $color;\n\t-webkit-box-shadow: $left $top $radius $color;\n\t-moz-box-shadow: $left $top $radius $color;\n}\n\n@mixin transition($property, $duration, $easing: linear) {\n\ttransition: $property $duration $easing;\n\t-webkit-transition: $property $duration $easing;\n\t-moz-transition: $property $duration $easing;\n}\n\n@mixin border-radius($radius) {\n\tborder-radius: $radius;\n\t-webkit-border-radius: $radius;\n\t-moz-border-radius: $radius;\n}\n\n@mixin border-radii($topleft, $topright, $bottomright, $bottomleft) {\n\tborder-top-left-radius: $topleft;\n\tborder-top-right-radius: $topright;\n\tborder-bottom-right-radius: $bottomright;\n\tborder-bottom-left-radius: $bottomleft;\n\t-webkit-border-top-left-radius: $topleft;\n\t-webkit-border-top-right-radius: $topright;\n\t-webkit-border-bottom-right-radius: $bottomright;\n\t-webkit-border-bottom-left-radius: $bottomleft;\n\t-moz-border-radius-topleft: $topleft;\n\t-moz-border-radius-topright: $topright;\n\t-moz-border-radius-bottomright: $bottomright;\n\t-moz-border-radius-bottomleft: $bottomleft;\n}\n\n@mixin gradient($color1, $color2) {\n\tbackground-color: $color1;\n\tfilter: progid:DXImageTransform.Microsoft.gradient(GradientType=0, startColorstr=#{$color1}, endColorstr=#{$color2});\n\tbackground-image: -moz-linear-gradient(center top, $color1, $color2);\n\tbackground-image: -webkit-gradient(linear, 0% 0%, 0% 100%, from($color1), to($color2));\n}\n\n","@mixin btn-theme($btn-color) {\n\tborder-color: $btn-color;\n\tbackground-color: $btn-color;\n\tcolor: $white;\n}\n\n@mixin btn-theme-bgwhite($btn-color) {\n\t//border-color: darken($btn-color, 2%);\n\tbackground-color: $white;\n\tcolor: $btn-color;\n}\n\n@mixin btn-theme-links($btn-color) {\n\tcolor:($btn-color);\n}\n\n@mixin btn-theme-links($btn-color) {\n\tcolor:($btn-color);\n}\n\n@mixin trans($val...) {\n\t-webkit-transition: $val;\n\t-moz-transition: $val;\n\t-o-transition: $val;\n\ttransition: $val;\n}\n","@mixin label-theme($label-color) {\n\tborder-color:($label-color);\n\tbackground-color: $label-color;\n}\n\n@mixin label-theme-bgwhite($label-color) {\n\t//border-color: darken($label-color, 2%);\n\tbackground-color: $white;\n\tcolor:($label-color);\n}\n@mixin trans($val...) {\n\t-webkit-transition: $val;\n\t-moz-transition: $val; \n\t-o-transition: $val; \n\ttransition: $val; \n}\n","// Bourbon 5.1.0\n// https://www.bourbon.io/\n// Copyright 2011-2018 thoughtbot, inc.\n// MIT License\n\n@import \"bourbon/helpers/buttons-list\";\n@import \"bourbon/helpers/scales\";\n@import \"bourbon/helpers/text-inputs-list\";\n\n@import \"bourbon/settings/settings\";\n\n@import \"bourbon/validators/contains\";\n@import \"bourbon/validators/contains-falsy\";\n@import \"bourbon/validators/is-color\";\n@import \"bourbon/validators/is-length\";\n@import \"bourbon/validators/is-number\";\n@import \"bourbon/validators/is-size\";\n\n@import \"bourbon/utilities/assign-inputs\";\n@import \"bourbon/utilities/compact-shorthand\";\n@import \"bourbon/utilities/directional-property\";\n@import \"bourbon/utilities/fetch-bourbon-setting\";\n@import \"bourbon/utilities/font-source-declaration\";\n@import \"bourbon/utilities/gamma\";\n@import \"bourbon/utilities/lightness\";\n@import \"bourbon/utilities/contrast-ratio\";\n@import \"bourbon/utilities/unpack-shorthand\";\n\n@import \"bourbon/library/border-color\";\n@import \"bourbon/library/border-radius\";\n@import \"bourbon/library/border-style\";\n@import \"bourbon/library/border-width\";\n@import \"bourbon/library/buttons\";\n@import \"bourbon/library/clearfix\";\n@import \"bourbon/library/contrast-switch\";\n@import \"bourbon/library/ellipsis\";\n@import \"bourbon/library/font-face\";\n@import \"bourbon/library/font-stacks\";\n@import \"bourbon/library/hide-text\";\n@import \"bourbon/library/hide-visually\";\n@import \"bourbon/library/margin\";\n@import \"bourbon/library/modular-scale\";\n@import \"bourbon/library/overflow-wrap\";\n@import \"bourbon/library/padding\";\n@import \"bourbon/library/position\";\n@import \"bourbon/library/prefixer\";\n@import \"bourbon/library/shade\";\n@import \"bourbon/library/size\";\n@import \"bourbon/library/strip-unit\";\n@import \"bourbon/library/text-inputs\";\n@import \"bourbon/library/timing-functions\";\n@import \"bourbon/library/tint\";\n@import \"bourbon/library/triangle\";\n@import \"bourbon/library/value-prefixer\";\n","@charset \"UTF-8\";\n\n/// A list of all HTML button elements.\n///\n/// @type list\n///\n/// @access private\n\n$_buttons-list: (\n  \"button\",\n  \"[type='button']\",\n  \"[type='reset']\",\n  \"[type='submit']\",\n);\n","@charset \"UTF-8\";\n\n////\n/// Pre-defined scales for use with the `modular-scale` function.\n///\n/// @type number (unitless)\n///\n/// @see {function} modular-scale\n////\n\n$minor-second:     1.067;\n$major-second:     1.125;\n$minor-third:      1.2;\n$major-third:      1.25;\n$perfect-fourth:   1.333;\n$augmented-fourth: 1.414;\n$perfect-fifth:    1.5;\n$minor-sixth:      1.6;\n$golden:           1.618;\n$major-sixth:      1.667;\n$minor-seventh:    1.778;\n$major-seventh:    1.875;\n$octave:           2;\n$major-tenth:      2.5;\n$major-eleventh:   2.667;\n$major-twelfth:    3;\n$double-octave:    4;\n","@charset \"UTF-8\";\n\n/// A list of all _text-based_ HTML inputs.\n///\n/// @type list\n///\n/// @access private\n\n$_text-inputs-list: (\n  \"[type='color']\",\n  \"[type='date']\",\n  \"[type='datetime']\",\n  \"[type='datetime-local']\",\n  \"[type='email']\",\n  \"[type='month']\",\n  \"[type='number']\",\n  \"[type='password']\",\n  \"[type='search']\",\n  \"[type='tel']\",\n  \"[type='text']\",\n  \"[type='time']\",\n  \"[type='url']\",\n  \"[type='week']\",\n  \"input:not([type])\",\n  \"textarea\",\n);\n","@charset \"UTF-8\";\n\n/// Default global Bourbon settings. Values in this map are overwritten by any\n/// values set in the `$bourbon` map.\n///\n/// @type map\n///\n/// @property {color} contrast-switch-dark-color [#000]\n///   Global dark color for the `contrast-switch` function.\n///\n/// @property {color} contrast-switch-light-color [#fff]\n///   Global light color for the `contrast-switch` function.\n///\n/// @property {list} global-font-file-formats [(\"ttf\", \"woff2\", \"woff\")]\n///   Global font file formats for the `font-face` mixin.\n///\n/// @property {number (with unit)} modular-scale-base [1em]\n///   Global base value for the `modular-scale` function.\n///\n/// @property {number (unitless)} modular-scale-ratio [$major-third (1.25)]\n///   Global base ratio for the `modular-scale` function.\n///\n/// @property {boolean} rails-asset-pipeline [false]\n///   Set this to `true` when using the Rails Asset Pipeline and Bourbon will\n///   write asset paths using\n///   [sass-rails’ asset helpers](https://github.com/rails/sass-rails#asset-helpers).\n///\n/// @access private\n\n$_bourbon-defaults: (\n  \"contrast-switch-dark-color\": #000,\n  \"contrast-switch-light-color\": #fff,\n  \"global-font-file-formats\": (\"ttf\", \"woff2\", \"woff\"),\n  \"modular-scale-base\": 1em,\n  \"modular-scale-ratio\": $major-third,\n  \"rails-asset-pipeline\": false,\n);\n\n/// Global Bourbon settings.\n///\n/// @name Settings\n///\n/// @type map\n///\n/// @property {color} contrast-switch-dark-color [#000]\n///   Global dark color for the `contrast-switch` function.\n///\n/// @property {color} contrast-switch-light-color [#fff]\n///   Global light color for the `contrast-switch` function.\n///\n/// @property {list} global-font-file-formats [(\"ttf\", \"woff2\", \"woff\")]\n///   Global font file formats for the `font-face` mixin.\n///\n/// @property {number (with unit)} modular-scale-base [1em]\n///   Global base value for the `modular-scale` function.\n///\n/// @property {number (unitless)} modular-scale-ratio [$major-third (1.25)]\n///   Global base ratio for the `modular-scale` function.\n///\n/// @property {boolean} rails-asset-pipeline [false]\n///   Set this to `true` when using the Rails Asset Pipeline and Bourbon will\n///   write asset paths using\n///   [sass-rails’ asset helpers](https://github.com/rails/sass-rails#asset-helpers).\n///\n/// @example scss\n///   $bourbon: (\n///     \"contrast-switch-dark-color\": #000,\n///     \"contrast-switch-light-color\": #fff,\n///     \"global-font-file-formats\": (\"ttf\", \"woff2\", \"woff\"),\n///     \"modular-scale-base\": 1em,\n///     \"modular-scale-ratio\": $major-third,\n///     \"rails-asset-pipeline\": false,\n///   );\n\n$bourbon: () !default;\n","@charset \"UTF-8\";\n\n/// Checks if a list contains a value(s).\n///\n/// @argument {list} $list\n///   The list to check against.\n///\n/// @argument {list} $values\n///   A single value or list of values to check for.\n///\n/// @return {boolean}\n///\n/// @access private\n\n@function _contains(\n  $list,\n  $values...\n) {\n  @each $value in $values {\n    @if type-of(index($list, $value)) != \"number\" {\n      @return false;\n    }\n  }\n\n  @return true;\n}\n","@charset \"UTF-8\";\n\n/// Checks if a list does not contain any values.\n///\n/// @argument {list} $list\n///   The list to check against.\n///\n/// @return {boolean}\n///\n/// @access private\n\n@function _contains-falsy($list) {\n  @each $item in $list {\n    @if not $item {\n      @return true;\n    }\n  }\n\n  @return false;\n}\n","@charset \"UTF-8\";\n\n/// Checks for a valid CSS color.\n///\n/// @argument {string} $color\n///\n/// @return {boolean}\n///\n/// @access private\n\n@function _is-color($color) {\n  @return (type-of($color) == color) or ($color == \"currentColor\");\n}\n","@charset \"UTF-8\";\n\n/// Checks for a valid CSS length.\n///\n/// @argument {string} $value\n///\n/// @return {boolean}\n///\n/// @access private\n\n@function _is-length($value) {\n  @return type-of($value) != \"null\" and (str-slice($value + \"\", 1, 4) == \"calc\"\n       or index(auto inherit initial 0, $value)\n       or (type-of($value) == \"number\" and not(unitless($value))));\n}\n","@charset \"UTF-8\";\n\n/// Checks for a valid number.\n///\n/// @argument {number} $value\n///\n/// @require {function} _contains\n///\n/// @return {boolean}\n///\n/// @access private\n\n@function _is-number($value) {\n  @return _contains(\"0\" \"1\" \"2\" \"3\" \"4\" \"5\" \"6\" \"7\" \"8\" \"9\" 0 1 2 3 4 5 6 7 8 9, $value);\n}\n","@charset \"UTF-8\";\n\n/// Checks for a valid CSS size.\n///\n/// @argument {string} $value\n///\n/// @return {boolean}\n///\n/// @require {function} _contains\n///\n/// @require {function} _is-length\n///\n/// @access private\n\n@function _is-size($value) {\n  @return _is-length($value)\n          or _contains(\"fill\" \"fit-content\" \"min-content\" \"max-content\", $value);\n}\n","@charset \"UTF-8\";\n\n/// Append pseudo-classes to a selector(s).\n///\n/// @argument {list | string} $inputs\n///   A selector, or list of selectors, to apply the pseudo-class to.\n///\n/// @argument {pseudo-class} $pseudo [null]\n///   The pseudo-class to be appended.\n///\n/// @return {list}\n///\n/// @access private\n\n@function _assign-inputs(\n  $inputs,\n  $pseudo: null\n) {\n  $list: ();\n\n  @each $input in $inputs {\n    $input: unquote($input);\n    $input: if($pseudo, $input + \":\" + $pseudo, $input);\n    $list: append($list, $input, comma);\n  }\n\n  @return $list;\n}\n","@charset \"UTF-8\";\n\n// scss-lint:disable ElsePlacement\n\n/// Transforms shorthand to its shortest possible form.\n///\n/// @argument {list} $values\n///   List of directional values.\n///\n/// @example scss\n///   $values: _compact-shorthand(10px 20px 10px 20px);\n///\n///   // Output\n///   $values: 10px 20px;\n///\n/// @return {list}\n///\n/// @access private\n\n@function _compact-shorthand($values) {\n  $output: null;\n\n  $a: nth($values, 1);\n  $b: if(length($values) < 2, $a, nth($values, 2));\n  $c: if(length($values) < 3, $a, nth($values, 3));\n  $d: if(length($values) < 2, $a, nth($values, if(length($values) < 4, 2, 4)));\n\n  @if $a == 0 { $a: 0; }\n  @if $b == 0 { $b: 0; }\n  @if $c == 0 { $c: 0; }\n  @if $d == 0 { $d: 0; }\n\n  @if $a == $b and $a == $c and $a == $d { $output: $a;          }\n  @else if $a == $c and $b == $d         { $output: $a $b;       }\n  @else if $b == $d                      { $output: $a $b $c;    }\n  @else                                  { $output: $a $b $c $d; }\n\n  @return $output;\n}\n","@charset \"UTF-8\";\n\n// scss-lint:disable SpaceAroundOperator\n\n/// Builds directional properties by parsing CSS shorthand values. For example,\n/// a value of `10px null` will output top and bottom directional properties,\n/// but the `null` skips left and right from being output.\n///\n/// @argument {string} $property\n///   Base property.\n///\n/// @argument {string} $suffix\n///   Suffix to append. Use `null` to omit.\n///\n/// @argument {list} $values\n///   List of values to set for the property.\n///\n/// @example scss\n///   .element {\n///     @include _directional-property(border, width, null 5px);\n///   }\n///\n///   // CSS Output\n///   .element {\n///     border-right-width: 5px;\n///     border-left-width: 5px;\n///   }\n///\n/// @require {function} _compact-shorthand\n///\n/// @require {function} _contains-falsy\n///\n/// @access private\n\n@mixin _directional-property(\n $property,\n $suffix,\n $values\n) {\n $top:    $property + \"-top\"    + if($suffix, \"-#{$suffix}\", \"\");\n $bottom: $property + \"-bottom\" + if($suffix, \"-#{$suffix}\", \"\");\n $left:   $property + \"-left\"   + if($suffix, \"-#{$suffix}\", \"\");\n $right:  $property + \"-right\"  + if($suffix, \"-#{$suffix}\", \"\");\n $all:    $property +             if($suffix, \"-#{$suffix}\", \"\");\n\n $values: _compact-shorthand($values);\n\n @if _contains-falsy($values) {\n   @if nth($values, 1) { #{$top}: nth($values, 1) !important; }\n\n   @if length($values) == 1 {\n     @if nth($values, 1) { #{$right}: nth($values, 1) !important; }\n   } @else {\n     @if nth($values, 2) { #{$right}: nth($values, 2) !important; }\n   }\n\n   @if length($values) == 2 {\n     @if nth($values, 1) { #{$bottom}: nth($values, 1) !important; }\n     @if nth($values, 2) { #{$left}: nth($values, 2) !important; }\n   } @else if length($values) == 3 {\n     @if nth($values, 3) { #{$bottom}: nth($values, 3) !important; }\n     @if nth($values, 2) { #{$left}: nth($values, 2) !important; }\n   } @else if length($values) == 4 {\n     @if nth($values, 3) { #{$bottom}: nth($values, 3) !important; }\n     @if nth($values, 4) { #{$left}: nth($values, 4) !important; }\n   }\n } @else {\n   #{$all}: $values !important;\n }\n}\n","@charset \"UTF-8\";\n\n/// Return a Bourbon setting.\n///\n/// @argument {string} $setting\n///\n/// @return {boolean | color | list | number | string}\n///\n/// @example scss\n///   _fetch-bourbon-setting(rails-asset-pipeline)\n///\n/// @access private\n\n@function _fetch-bourbon-setting($setting) {\n  @return map-get(map-merge($_bourbon-defaults, $bourbon), $setting);\n}\n","@charset \"UTF-8\";\n\n/// Builds the `src` list for an `@font-face` declaration.\n///\n/// @link https://goo.gl/Ru1bKP\n///\n/// @argument {string} $font-family\n///\n/// @argument {string} $file-path\n///\n/// @argument {boolean} $asset-pipeline\n///\n/// @argument {list} $file-formats\n///\n/// @return {list}\n///\n/// @require {function} _contains\n///\n/// @access private\n\n@function _font-source-declaration(\n  $font-family,\n  $file-path,\n  $asset-pipeline,\n  $file-formats\n) {\n  $src: ();\n\n  $formats-map: (\n    eot:   \"#{$file-path}.eot?#iefix\" format(\"embedded-opentype\"),\n    woff2: \"#{$file-path}.woff2\" format(\"woff2\"),\n    woff:  \"#{$file-path}.woff\" format(\"woff\"),\n    ttf:   \"#{$file-path}.ttf\" format(\"truetype\"),\n    svg:   \"#{$file-path}.svg##{$font-family}\" format(\"svg\"),\n  );\n\n  @each $key, $values in $formats-map {\n    @if _contains($file-formats, $key) {\n      $file-path: nth($values, 1);\n      $font-format: nth($values, 2);\n\n      @if $asset-pipeline == true {\n        $src: append($src, font-url($file-path) $font-format, comma);\n      } @else {\n        $src: append($src, url($file-path) $font-format, comma);\n      }\n    }\n  }\n\n  @return $src;\n}\n","@charset \"UTF-8\";\n\n/// Performs gamma correction on a single color channel.\n///\n/// Note that the calculation is approximate if a `pow()` is not available.\n///\n/// @argument {number (0-1)} $channel\n///\n/// @return {number (0-1)}\n///\n/// @access private\n\n@function _gamma($channel) {\n  @if $channel < 0.03928 {\n    @return $channel / 12.92;\n  } @else {\n    $c: ($channel + 0.055) / 1.055;\n    @if function-exists(\"pow\") {\n      @return pow($c, 2.4);\n    } @else {\n      @return 0.56 * $c * $c * $c + 0.44 * $c * $c;\n    }\n  }\n}\n","@charset \"UTF-8\";\n\n/// Programatically determines the lightness of a color.\n///\n/// @argument {color (hex)} $hex-color\n///\n/// @return {number (0-1)}\n///\n/// @example scss\n///   _lightness($color)\n///\n/// @access private\n\n@function _lightness($hex-color) {\n  $-local-red-raw: red(rgba($hex-color, 1));\n  $-local-green-raw: green(rgba($hex-color, 1));\n  $-local-blue-raw: blue(rgba($hex-color, 1));\n\n  $-local-red: _gamma($-local-red-raw / 255);\n  $-local-green: _gamma($-local-green-raw / 255);\n  $-local-blue: _gamma($-local-blue-raw / 255);\n\n  @return $-local-red * 0.2126 + $-local-green * 0.7152 + $-local-blue * 0.0722;\n}\n","@charset \"UTF-8\";\n\n/// Programatically determines the contrast ratio between two colors.\n///\n/// Note that the alpha channel is ignored.\n///\n/// @link https://goo.gl/54htLV\n///\n/// @argument {color (hex)} $color-1\n///\n/// @argument {color (hex)} $color-2\n///\n/// @return {number (1-21)}\n///\n/// @example scss\n///   _contrast-ratio(black, white)\n///\n/// @require {function} _lightness\n///\n/// @access private\n\n@function _contrast-ratio($color-1, $color-2) {\n  $-local-lightness-1: _lightness($color-1) + 0.05;\n  $-local-lightness-2: _lightness($color-2) + 0.05;\n\n  @if $-local-lightness-1 > $-local-lightness-2 {\n    @return $-local-lightness-1 / $-local-lightness-2;\n  } @else {\n    @return $-local-lightness-2 / $-local-lightness-1;\n  }\n}\n","@charset \"UTF-8\";\n\n/// Transforms shorthand that can range from 1-to-4 values to be 4 values.\n///\n/// @argument {list} $shorthand\n///\n/// @example scss\n///   .element {\n///     margin: _unpack-shorthand(1em 2em);\n///   }\n///\n///   // CSS Output\n///   .element {\n///     margin: 1em 2em 1em 2em;\n///   }\n///\n/// @access private\n\n@function _unpack-shorthand($shorthand) {\n  @if length($shorthand) == 1 {\n    @return nth($shorthand, 1) nth($shorthand, 1) nth($shorthand, 1) nth($shorthand, 1);\n  } @else if length($shorthand) == 2 {\n    @return nth($shorthand, 1) nth($shorthand, 2) nth($shorthand, 1) nth($shorthand, 2);\n  } @else if length($shorthand) == 3 {\n    @return nth($shorthand, 1) nth($shorthand, 2) nth($shorthand, 3) nth($shorthand, 2);\n  } @else {\n    @return $shorthand;\n  }\n}\n","@charset \"UTF-8\";\n\n/// Provides a concise, one-line method for setting `border-color` on specific\n/// edges of a box. Use a `null` value to “skip” edges of the box with standard\n/// CSS shorthand.\n///\n/// @argument {list} $values\n///   List of colors; accepts CSS shorthand.\n///\n/// @example scss\n///   .element {\n///     @include border-color(#a60b55 #76cd9c null #e8ae1a);\n///   }\n///\n///   // CSS Output\n///   .element {\n///     border-left-color: #e8ae1a;\n///     border-right-color: #76cd9c;\n///     border-top-color: #a60b55;\n///   }\n///\n/// @require {mixin} _directional-property\n\n@mixin border-color($values) {\n  @include _directional-property(border, color, $values);\n}\n","@charset \"UTF-8\";\n\n/// Provides a concise, one-line method for setting `border-radius` on both the\n/// top-left and top-right of a box.\n///\n/// @argument {number (with unit)} $radii\n///\n/// @example scss\n///   .element {\n///     @include border-top-radius(4px);\n///   }\n///\n///   // CSS Output\n///   .element {\n///     border-top-left-radius: 4px;\n///     border-top-right-radius: 4px;\n///   }\n\n@mixin border-top-radius($radii) {\n  border-top-left-radius: $radii;\n  border-top-right-radius: $radii;\n}\n\n/// Provides a concise, one-line method for setting `border-radius` on both the\n/// top-right and bottom-right of a box.\n///\n/// @argument {number (with unit)} $radii\n///\n/// @example scss\n///   .element {\n///     @include border-right-radius(3px);\n///   }\n///\n///   // CSS Output\n///   .element {\n///     border-bottom-right-radius: 3px;\n///     border-top-right-radius: 3px;\n///   }\n\n@mixin border-right-radius($radii) {\n  border-bottom-right-radius: $radii;\n  border-top-right-radius: $radii;\n}\n\n/// Provides a concise, one-line method for setting `border-radius` on both the\n/// bottom-left and bottom-right of a box.\n///\n/// @argument {number (with unit)} $radii\n///\n/// @example scss\n///   .element {\n///     @include border-bottom-radius(2px);\n///   }\n///\n///   // CSS Output\n///   .element {\n///     border-bottom-left-radius: 2px;\n///     border-bottom-right-radius: 2px;\n///   }\n\n@mixin border-bottom-radius($radii) {\n  border-bottom-left-radius: $radii;\n  border-bottom-right-radius: $radii;\n}\n\n/// Provides a concise, one-line method for setting `border-radius` on both the\n/// top-left and bottom-left of a box.\n///\n/// @argument {number (with unit)} $radii\n///\n/// @example scss\n///   .element {\n///     @include border-left-radius(1px);\n///   }\n///\n///   // CSS Output\n///   .element {\n///     border-bottom-left-radius: 1px;\n///     border-top-left-radius: 1px;\n///   }\n\n@mixin border-left-radius($radii) {\n  border-bottom-left-radius: $radii;\n  border-top-left-radius: $radii;\n}\n","@charset \"UTF-8\";\n\n/// Provides a concise, one-line method for setting `border-style` on specific\n/// edges of a box. Use a `null` value to “skip” edges of the box with standard\n/// CSS shorthand.\n///\n/// @argument {list} $values\n///   List of border styles; accepts CSS shorthand.\n///\n/// @example scss\n///   .element {\n///     @include border-style(dashed null solid);\n///   }\n///\n///   // CSS Output\n///   .element {\n///     border-bottom-style: solid;\n///     border-top-style: dashed;\n///   }\n///\n/// @require {mixin} _directional-property\n\n@mixin border-style($values) {\n  @include _directional-property(border, style, $values);\n}\n","@charset \"UTF-8\";\n\n/// Provides a concise, one-line method for setting `border-width` on specific\n/// edges of a box. Use a `null` value to “skip” edges of the box with standard\n/// CSS shorthand.\n///\n/// @argument {list} $values\n///   List of border widths; accepts CSS shorthand.\n///\n/// @example scss\n///   .element {\n///     @include border-width(1em null 20px);\n///   }\n///\n///   // CSS Output\n///   .element {\n///     border-bottom-width: 20px;\n///     border-top-width: 1em;\n///   }\n///\n/// @require {mixin} _directional-property\n\n@mixin border-width($values) {\n  @include _directional-property(border, width, $values);\n}\n","@charset \"UTF-8\";\n\n////\n/// @type list\n///\n/// @require {function} _assign-inputs\n///\n/// @require {variable} $_buttons-list\n////\n\n/// A list of all HTML button elements. Please note that you must interpolate\n/// the variable (`#{}`) to use it as a selector.\n///\n/// @example scss\n///   #{$all-buttons} {\n///     background-color: #f00;\n///   }\n///\n///   // CSS Output\n///   button,\n///   [type='button'],\n///   [type='reset'],\n///   [type='submit'] {\n///     background-color: #f00;\n///   }\n\n$all-buttons: _assign-inputs($_buttons-list);\n\n/// A list of all HTML button elements with the `:active` pseudo-class applied.\n/// Please note that you must interpolate the variable (`#{}`) to use it as a\n/// selector.\n///\n/// @example scss\n///   #{$all-buttons-active} {\n///     background-color: #00f;\n///   }\n///\n///   // CSS Output\n///   button:active,\n///   [type='button']:active,\n///   [type='reset']:active,\n///   [type='submit']:active {\n///     background-color: #00f;\n///   }\n\n$all-buttons-active: _assign-inputs($_buttons-list, active);\n\n/// A list of all HTML button elements with the `:focus` pseudo-class applied.\n/// Please note that you must interpolate the variable (`#{}`) to use it as a\n/// selector.\n///\n/// @example scss\n///   #{$all-buttons-focus} {\n///     background-color: #0f0;\n///   }\n///\n///   // CSS Output\n///   button:focus,\n///   [type='button']:focus,\n///   [type='reset']:focus,\n///   [type='submit']:focus {\n///     background-color: #0f0;\n///   }\n\n$all-buttons-focus: _assign-inputs($_buttons-list, focus);\n\n/// A list of all HTML button elements with the `:hover` pseudo-class applied.\n/// Please note that you must interpolate the variable (`#{}`) to use it as a\n/// selector.\n///\n/// @example scss\n///   #{$all-buttons-hover} {\n///     background-color: #0f0;\n///   }\n///\n///   // CSS Output\n///   button:hover,\n///   [type='button']:hover,\n///   [type='reset']:hover,\n///   [type='submit']:hover {\n///     background-color: #0f0;\n///   }\n\n$all-buttons-hover: _assign-inputs($_buttons-list, hover);\n","@charset \"UTF-8\";\n\n/// Provides an easy way to include a clearfix for containing floats.\n///\n/// @link https://goo.gl/yP5hiZ\n///\n/// @example scss\n///   .element {\n///     @include clearfix;\n///   }\n///\n///   // CSS Output\n///   .element::after {\n///     clear: both;\n///     content: \"\";\n///     display: block;\n///   }\n\n@mixin clearfix {\n  &::after {\n    clear: both;\n    content: \"\";\n    display: block;\n  }\n}\n","@charset \"UTF-8\";\n\n/// Switches between two colors based on the contrast to another color. It’s\n/// like a [ternary operator] for color contrast and can be useful for building\n/// a button system.\n///\n/// The calculation of the contrast ratio is based on the [WCAG 2.0\n/// specification]. However, we cannot guarantee full compliance, though all of\n/// our manual testing passed.\n///\n///   [ternary operator]: https://goo.gl/ccfLqi\n///   [WCAG 2.0 specification]: https://goo.gl/zhQuYA\n///\n/// @argument {color} $base-color\n///   The color to evaluate lightness against.\n///\n/// @argument {color} $dark-color [#000]\n///   The color to be output when `$base-color` is light. Can also be set\n///   globally using the `contrast-switch-dark-color` key in the\n///   Bourbon settings.\n///\n/// @argument {color} $light-color [#fff]\n///   The color to be output when `$base-color` is dark. Can also be set\n///   globally using the `contrast-switch-light-color` key in the\n///   Bourbon settings.\n///\n/// @return {color}\n///\n/// @example scss\n///   .element {\n///     color: contrast-switch(#bae6e6);\n///   }\n///\n///   // CSS Output\n///   .element {\n///     color: #000;\n///   }\n///\n/// @example scss\n///   .element {\n///     $button-color: #2d72d9;\n///     background-color: $button-color;\n///     color: contrast-switch($button-color, #222, #eee);\n///   }\n///\n///   // CSS Output\n///   .element {\n///     background-color: #2d72d9;\n///     color: #eee;\n///   }\n///\n/// @require {function} _fetch-bourbon-setting\n///\n/// @require {function} _is-color\n///\n/// @require {function} _contrast-ratio\n///\n/// @since 5.0.0\n\n@function contrast-switch(\n  $base-color,\n  $dark-color: _fetch-bourbon-setting(\"contrast-switch-dark-color\"),\n  $light-color: _fetch-bourbon-setting(\"contrast-switch-light-color\")\n) {\n  @if not _is-color($base-color) {\n    @error \"`#{$base-color}` is not a valid color for the `$base-color` \" +\n           \"argument in the `contrast-switch` function.\";\n  } @else if not _is-color($dark-color) {\n    @error \"`#{$dark-color}` is not a valid color for the `$dark-color` \" +\n           \"argument in the `contrast-switch` function.\";\n  } @else if not _is-color($light-color) {\n    @error \"`#{$light-color}` is not a valid color for the `$light-color` \" +\n           \"argument in the `contrast-switch` function.\";\n  } @else {\n    $-contrast-to-dark: _contrast-ratio($base-color, $dark-color);\n    $-contrast-to-light: _contrast-ratio($base-color, $light-color);\n    $-prefer-dark: $-contrast-to-dark >= $-contrast-to-light;\n\n    @return if($-prefer-dark, $dark-color, $light-color);\n  }\n}\n","@charset \"UTF-8\";\n\n/// Truncates text and adds an ellipsis to represent overflow.\n///\n/// @argument {number} $width [100%]\n///   The `max-width` for the string to respect before being truncated.\n///\n/// @argument {string} $display [inline-block]\n///   Sets the display-value of the element.\n///\n/// @example scss\n///   .element {\n///     @include ellipsis;\n///   }\n///\n///   // CSS Output\n///   .element {\n///     display: inline-block;\n///     max-width: 100%;\n///     overflow: hidden;\n///     text-overflow: ellipsis;\n///     white-space: nowrap;\n///     word-wrap: normal;\n///   }\n\n@mixin ellipsis(\n  $width: 100%,\n  $display: inline-block\n) {\n  display: $display;\n  max-width: $width;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  word-wrap: normal;\n}\n","@charset \"UTF-8\";\n\n/// Generates an `@font-face` declaration. You can choose the specific file\n/// formats you need to output; the mixin supports `eot`, `ttf`, `svg`, `woff2`\n/// and `woff`. The mixin also supports usage with the Rails Asset Pipeline,\n/// which you can enable per use, or globally in the `$bourbon()` settings.\n///\n/// @argument {string} $font-family\n///\n/// @argument {string} $file-path\n///\n/// @argument {string | list} $file-formats [(\"ttf\", \"woff2\", \"woff\")]\n///   List of the font file formats to include. Can also be set globally using\n///   the `global-font-file-formats` key in the Bourbon settings.\n///\n/// @argument {string} $asset-pipeline [false]\n///   Set to `true` if you’re using the Rails Asset Pipeline (place the fonts\n///   in `app/assets/fonts/`). Can also be set globally using the\n///   `rails-asset-pipeline` key in the Bourbon settings.\n///\n/// @content\n///   Any additional CSS properties that are included in the `@include`\n///   directive will be output within the `@font-face` declaration, e.g. you can\n///   pass in `font-weight`, `font-style` and/or `unicode-range`.\n///\n/// @example scss\n///   @include font-face(\n///     \"source-sans-pro\",\n///     \"fonts/source-sans-pro-regular\",\n///     (\"woff2\", \"woff\")\n///   ) {\n///     font-style: normal;\n///     font-weight: 400;\n///   }\n///\n///   // CSS Output\n///   @font-face {\n///     font-family: \"source-sans-pro\";\n///     src: url(\"fonts/source-sans-pro-regular.woff2\") format(\"woff2\"),\n///          url(\"fonts/source-sans-pro-regular.woff\") format(\"woff\");\n///     font-style: normal;\n///     font-weight: 400;\n///   }\n///\n/// @require {function} _font-source-declaration\n///\n/// @require {function} _fetch-bourbon-setting\n\n@mixin font-face(\n  $font-family,\n  $file-path,\n  $file-formats: _fetch-bourbon-setting(\"global-font-file-formats\"),\n  $asset-pipeline: _fetch-bourbon-setting(\"rails-asset-pipeline\")\n) {\n  @font-face {\n    font-family: $font-family;\n    src: _font-source-declaration(\n      $font-family,\n      $file-path,\n      $asset-pipeline,\n      $file-formats\n    );\n    @content;\n  }\n}\n","@charset \"UTF-8\";\n\n/// A variable that outputs a Helvetica font stack.\n///\n/// @link https://goo.gl/uSJvZe\n///\n/// @type list\n///\n/// @example scss\n///   .element {\n///     font-family: $font-stack-helvetica;\n///   }\n///\n///   // CSS Output\n///   .element {\n///     font-family: \"Helvetica Neue\", \"Helvetica\", \"Arial\", sans-serif;\n///   }\n\n$font-stack-helvetica: (\n  \"Helvetica Neue\",\n  \"Helvetica\",\n  \"Arial\",\n  sans-serif,\n);\n\n/// A variable that outputs a Lucida Grande font stack.\n///\n/// @link https://goo.gl/R5UyYE\n///\n/// @type list\n///\n/// @example scss\n///   .element {\n///     font-family: $font-stack-lucida-grande;\n///   }\n///\n///   // CSS Output\n///   .element {\n///     font-family: \"Lucida Grande\", \"Lucida Sans Unicode\", \"Geneva\", \"Verdana\", sans-serif;\n///   }\n\n$font-stack-lucida-grande: (\n  \"Lucida Grande\",\n  \"Lucida Sans Unicode\",\n  \"Geneva\",\n  \"Verdana\",\n  sans-serif,\n);\n\n/// A variable that outputs a Verdana font stack.\n///\n/// @link https://goo.gl/yGXWSS\n///\n/// @type list\n///\n/// @example scss\n///   .element {\n///     font-family: $font-stack-verdana;\n///   }\n///\n///   // CSS Output\n///   .element {\n///     font-family: \"Verdana\", \"Geneva\", sans-serif;\n///   }\n\n$font-stack-verdana: (\n  \"Verdana\",\n  \"Geneva\",\n  sans-serif,\n);\n\n/// A variable that outputs a system font stack.\n///\n/// @type list\n///\n/// @example scss\n///   .element {\n///     font-family: $font-stack-system;\n///   }\n///\n///   // CSS Output\n///   .element {\n///     font-family: system-ui, -apple-system, BlinkMacSystemFont, \"Avenir Next\", \"Avenir\", \"Segoe UI\", \"Lucida Grande\", \"Helvetica Neue\", \"Helvetica\", \"Fira Sans\", \"Roboto\", \"Noto\", \"Droid Sans\", \"Cantarell\", \"Oxygen\", \"Ubuntu\", \"Franklin Gothic Medium\", \"Century Gothic\", \"Liberation Sans\", sans-serif;\n///   }\n\n$font-stack-system: (\n  system-ui,\n  -apple-system,\n  BlinkMacSystemFont,\n  \"Avenir Next\",\n  \"Avenir\",\n  \"Segoe UI\",\n  \"Lucida Grande\",\n  \"Helvetica Neue\",\n  \"Helvetica\",\n  \"Fira Sans\",\n  \"Roboto\",\n  \"Noto\",\n  \"Droid Sans\",\n  \"Cantarell\",\n  \"Oxygen\",\n  \"Ubuntu\",\n  \"Franklin Gothic Medium\",\n  \"Century Gothic\",\n  \"Liberation Sans\",\n  sans-serif,\n);\n\n/// A variable that outputs a Garamond font stack.\n///\n/// @link https://goo.gl/QQFEkV\n///\n/// @type list\n///\n/// @example scss\n///   .element {\n///     font-family: $font-stack-garamond;\n///   }\n///\n///   // CSS Output\n///   .element {\n///     font-family: \"Garamond\", \"Baskerville\", \"Baskerville Old Face\", \"Hoefler Text\", \"Times New Roman\", serif;\n///   }\n\n$font-stack-garamond: (\n  \"Garamond\",\n  \"Baskerville\",\n  \"Baskerville Old Face\",\n  \"Hoefler Text\",\n  \"Times New Roman\",\n  serif,\n);\n\n/// A variable that outputs a Georgia font stack.\n///\n/// @link https://goo.gl/wtzVPy\n///\n/// @type list\n///\n/// @example scss\n///   .element {\n///     font-family: $font-stack-georgia;\n///   }\n///\n///   // CSS Output\n///   .element {\n///     font-family: \"Georgia\", \"Times\", \"Times New Roman\", serif;\n///   }\n\n$font-stack-georgia: (\n  \"Georgia\",\n  \"Times\",\n  \"Times New Roman\",\n  serif,\n);\n\n/// A variable that outputs a Hoefler Text font stack.\n///\n/// @link https://goo.gl/n7U7zx\n///\n/// @type list\n///\n/// @example scss\n///   .element {\n///     font-family: $font-stack-hoefler-text;\n///   }\n///\n///   // CSS Output\n///   .element {\n///     font-family: \"Hoefler Text\", \"Baskerville Old Face\", \"Garamond\", \"Times New Roman\", serif;\n///   }\n\n$font-stack-hoefler-text: (\n  \"Hoefler Text\",\n  \"Baskerville Old Face\",\n  \"Garamond\",\n  \"Times New Roman\",\n  serif,\n);\n\n/// A variable that outputs a Consolas font stack.\n///\n/// @link https://goo.gl/iKrtqv\n///\n/// @type list\n///\n/// @example scss\n///   .element {\n///     font-family: $font-stack-consolas;\n///   }\n///\n///   // CSS Output\n///   .element {\n///     font-family: \"Consolas\", \"monaco\", monospace;\n///   }\n\n$font-stack-consolas: (\n  \"Consolas\",\n  \"monaco\",\n  monospace,\n);\n\n/// A variable that outputs a Courier New font stack.\n///\n/// @link https://goo.gl/bHfWMP\n///\n/// @type list\n///\n/// @example scss\n///   .element {\n///     font-family: $font-stack-courier-new;\n///   }\n///\n///   // CSS Output\n///   .element {\n///     font-family: \"Courier New\", \"Courier\", \"Lucida Sans Typewriter\", \"Lucida Typewriter\", monospace;\n///   }\n\n$font-stack-courier-new: (\n  \"Courier New\",\n  \"Courier\",\n  \"Lucida Sans Typewriter\",\n  \"Lucida Typewriter\",\n  monospace,\n);\n\n/// A variable that outputs a Monaco font stack.\n///\n/// @link https://goo.gl/9PgKDO\n///\n/// @type list\n///\n/// @example scss\n///   .element {\n///     font-family: $font-stack-monaco;\n///   }\n///\n///   // CSS Output\n///   .element {\n///     font-family: \"Monaco\", \"Consolas\", \"Lucida Console\", monospace;\n///   }\n\n$font-stack-monaco: (\n  \"Monaco\",\n  \"Consolas\",\n  \"Lucida Console\",\n  monospace,\n);\n","@charset \"UTF-8\";\n\n/// Hides the text in an element, commonly used to show an image instead. Some\n/// elements will need block-level styles applied.\n///\n/// @link https://goo.gl/EvLRIu\n///\n/// @example scss\n///   .element {\n///     @include hide-text;\n///   }\n///\n///   // CSS Output\n///   .element {\n///     overflow: hidden;\n///     text-indent: 101%;\n///     white-space: nowrap;\n///   }\n\n@mixin hide-text {\n  overflow: hidden;\n  text-indent: 101%;\n  white-space: nowrap;\n}\n","@charset \"UTF-8\";\n\n/// Hides an element visually while still allowing the content to be accessible\n/// to assistive technology, e.g. screen readers. Passing `unhide` will reverse\n/// the affects of the hiding, which is handy for showing the element on focus,\n/// for example.\n///\n/// @link https://goo.gl/Vf1TGn\n///\n/// @argument {string} $toggle [hide]\n///   Accepts `hide` or `unhide`. `unhide` reverses the affects of `hide`.\n///\n/// @example scss\n///   .element {\n///     @include hide-visually;\n///\n///     &:active,\n///     &:focus {\n///       @include hide-visually(\"unhide\");\n///     }\n///   }\n///\n///   // CSS Output\n///   .element {\n///     border: 0;\n///     clip: rect(1px, 1px, 1px, 1px);\n///     clip-path: inset(100%);\n///     height: 1px;\n///     overflow: hidden;\n///     padding: 0;\n///     position: absolute;\n///     width: 1px;\n///   }\n///\n///   .hide-visually:active,\n///   .hide-visually:focus {\n///     clip: auto;\n///     clip-path: none;\n///     height: auto;\n///     overflow: visible;\n///     position: static;\n///     width: auto;\n///   }\n///\n/// @since 5.0.0\n\n@mixin hide-visually($toggle: \"hide\") {\n  @if not index(\"hide\" \"unhide\", $toggle) {\n    @error \"`#{$toggle}` is not a valid value for the `$toggle` argument in \" +\n           \"the `hide-visually` mixin. Must be either `hide` or `unhide`.\";\n  } @else if $toggle == \"hide\" {\n    border: 0;\n    clip: rect(1px, 1px, 1px, 1px);\n    clip-path: inset(100%);\n    height: 1px;\n    overflow: hidden;\n    padding: 0;\n    position: absolute;\n    white-space: nowrap;\n    width: 1px;\n  } @else if $toggle == \"unhide\" {\n    clip: auto;\n    clip-path: none;\n    height: auto;\n    overflow: visible;\n    position: static;\n    white-space: inherit;\n    width: auto;\n  }\n}\n","@charset \"UTF-8\";\n\n/// Provides a concise, one-line method for setting `margin` on specific edges\n/// of a box. Use a `null` value to “skip” edges of the box with standard\n/// CSS shorthand.\n///\n/// @argument {list} $values\n///   List of margin values; accepts CSS shorthand.\n///\n/// @example scss\n///   .element {\n///     @include margin(null auto);\n///   }\n///\n///   // CSS Output\n///   .element {\n///     margin-left: auto;\n///     margin-right: auto;\n///   }\n///\n/// @example scss\n///   .element {\n///     @include margin(10px 3em 20vh null);\n///   }\n///\n///   // CSS Output\n///   .element {\n///     margin-bottom: 20vh;\n///     margin-right: 3em;\n///     margin-top: 10px;\n///   }\n///\n/// @require {mixin} _directional-property\n\n@mixin margin($values) {\n  @include _directional-property(margin, null, $values);\n}\n","@charset \"UTF-8\";\n\n/// Increments up or down a defined scale and returns an adjusted value. This\n/// helps establish consistent measurements and spacial relationships throughout\n/// your project. We provide a list of commonly used scales as\n/// [pre-defined variables][scales].\n///\n/// [scales]: https://github.com/thoughtbot/bourbon/blob/master/core/bourbon/helpers/_scales.scss\n///\n/// @argument {number (unitless)} $increment\n///   How many steps to increment up or down the scale.\n///\n/// @argument {number (with unit) | list} $value [1em]\n///   The base value the scale starts at. Can also be set globally using the\n///   `modular-scale-base` key in the Bourbon settings.\n///\n/// @argument {number (unitless)} $ratio [1.25]\n///   The ratio the scale is built on. Can also be set globally using the\n///   `modular-scale-ratio` key in the Bourbon settings.\n///\n/// @return {number (with unit)}\n///\n/// @example scss\n///   .element {\n///     font-size: modular-scale(2);\n///   }\n///\n///   // CSS Output\n///   .element {\n///     font-size: 1.5625em;\n///   }\n///\n/// @example scss\n///   .element {\n///     margin-right: modular-scale(3, 2em);\n///   }\n///\n///   // CSS Output\n///   .element {\n///     margin-right: 3.90625em;\n///   }\n///\n/// @example scss\n///   .element {\n///     font-size: modular-scale(3, 1em 1.6em, $major-seventh);\n///   }\n///\n///   // CSS Output\n///   .element {\n///     font-size: 3em;\n///   }\n///\n/// @example scss\n///   // Globally change the base ratio\n///   $bourbon: (\n///     \"modular-scale-ratio\": 1.2,\n///   );\n///\n///   .element {\n///     font-size: modular-scale(3);\n///   }\n///\n///   // CSS Output\n///   .element {\n///     font-size: 1.728em;\n///   }\n///\n/// @require {function} _fetch-bourbon-setting\n\n@function modular-scale(\n  $increment,\n  $value: _fetch-bourbon-setting(\"modular-scale-base\"),\n  $ratio: _fetch-bourbon-setting(\"modular-scale-ratio\")\n) {\n  $v1: nth($value, 1);\n  $v2: nth($value, length($value));\n  $value: $v1;\n\n  // scale $v2 to just above $v1\n  @while $v2 > $v1 {\n    $v2: ($v2 / $ratio); // will be off-by-1\n  }\n  @while $v2 < $v1 {\n    $v2: ($v2 * $ratio); // will fix off-by-1\n  }\n\n  // check AFTER scaling $v2 to prevent double-counting corner-case\n  $double-stranded: $v2 > $v1;\n\n  @if $increment > 0 {\n    @for $i from 1 through $increment {\n      @if $double-stranded and ($v1 * $ratio) > $v2 {\n        $value: $v2;\n        $v2: ($v2 * $ratio);\n      } @else {\n        $v1: ($v1 * $ratio);\n        $value: $v1;\n      }\n    }\n  }\n\n  @if $increment < 0 {\n    // adjust $v2 to just below $v1\n    @if $double-stranded {\n      $v2: ($v2 / $ratio);\n    }\n\n    @for $i from $increment through -1 {\n      @if $double-stranded and ($v1 / $ratio) < $v2 {\n        $value: $v2;\n        $v2: ($v2 / $ratio);\n      } @else {\n        $v1: ($v1 / $ratio);\n        $value: $v1;\n      }\n    }\n  }\n\n  @return $value;\n}\n","@charset \"UTF-8\";\n\n/// Outputs the `overflow-wrap` property and its legacy name `word-wrap` to\n/// support browsers that do not yet use `overflow-wrap`.\n///\n/// @argument {string} $wrap [break-word]\n///   Accepted CSS values are `normal`, `break-word`, `inherit`, `initial`,\n///   or `unset`.\n///\n/// @example scss\n///   .wrapper {\n///     @include overflow-wrap;\n///   }\n///\n///   // CSS Output\n///   .wrapper {\n///     word-wrap: break-word;\n///     overflow-wrap: break-word;\n///   }\n\n@mixin overflow-wrap($wrap: break-word) {\n  word-wrap: $wrap;\n  overflow-wrap: $wrap;\n}\n","@charset \"UTF-8\";\n\n/// Provides a concise method for targeting `padding` on specific sides of a\n/// box. Use a `null` value to “skip” a side.\n///\n/// @argument {list} $values\n///   List of padding values; accepts CSS shorthand.\n///\n/// @example scss\n///   .element-one {\n///     @include padding(null 1rem);\n///   }\n///\n///   // CSS Output\n///   .element-one {\n///     padding-left: 1rem;\n///     padding-right: 1rem;\n///   }\n///\n/// @example scss\n///   .element-two {\n///     @include padding(10vh null 10px 5%);\n///   }\n///\n///   // CSS Output\n///   .element-two {\n///     padding-bottom: 10px;\n///     padding-left: 5%;\n///     padding-top: 10vh;\n///   }\n///\n/// @require {mixin} _directional-property\n\n@mixin padding($values) {\n  @include _directional-property(padding, null, $values);\n}\n","@charset \"UTF-8\";\n\n/// Provides a concise, one-line method for setting an element’s positioning\n/// properties: `position`, `top`, `right`, `bottom` and `left`. Use a `null`\n/// value to “skip” an edge of the box.\n///\n/// @argument {string} $position\n///   A CSS position value.\n///\n/// @argument {list} $box-edge-values\n///   List of lengths; accepts CSS shorthand.\n///\n/// @example scss\n///   .element {\n///     @include position(relative, 0 null null 10em);\n///   }\n///\n///   // CSS Output\n///   .element {\n///     left: 10em;\n///     position: relative;\n///     top: 0;\n///   }\n///\n/// @example scss\n///   .element {\n///     @include position(absolute, 0);\n///   }\n///\n///   // CSS Output\n///   .element {\n///     position: absolute;\n///     top: 0;\n///     right: 0;\n///     bottom: 0;\n///     left: 0;\n///   }\n///\n/// @require {function} _is-length\n///\n/// @require {function} _unpack-shorthand\n\n@mixin position(\n  $position,\n  $box-edge-values\n) {\n  $box-edge-values: _unpack-shorthand($box-edge-values);\n  $offsets: (\n    top:    nth($box-edge-values, 1),\n    right:  nth($box-edge-values, 2),\n    bottom: nth($box-edge-values, 3),\n    left:   nth($box-edge-values, 4),\n  );\n\n  position: $position;\n\n  @each $offset, $value in $offsets {\n    @if _is-length($value) {\n      #{$offset}: $value;\n    }\n  }\n}\n","@charset \"UTF-8\";\n\n/// Generates vendor prefixes.\n///\n/// @argument {string} $property\n///   Property to prefix.\n///\n/// @argument {string} $value\n///   Value to use.\n///\n/// @argument {list} $prefixes\n///   Vendor prefixes to output.\n///\n/// @example scss\n///   .element {\n///     @include prefixer(appearance, none, (\"webkit\", \"moz\"));\n///   }\n///\n///   // CSS Output\n///   .element {\n///     -webkit-appearance: none;\n///     -moz-appearance: none;\n///     appearance: none;\n///   }\n///\n/// @author Hugo Giraudel\n\n@mixin prefixer(\n  $property,\n  $value,\n  $prefixes: ()\n) {\n  @each $prefix in $prefixes {\n    #{\"-\" + $prefix + \"-\" + $property}: $value;\n  }\n  #{$property}: $value;\n}\n","@charset \"UTF-8\";\n\n/// Mixes a color with black.\n///\n/// @argument {color} $color\n///\n/// @argument {number (percentage)} $percent\n///   The amount of black to be mixed in.\n///\n/// @return {color}\n///\n/// @example scss\n///   .element {\n///     background-color: shade(#ffbb52, 60%);\n///   }\n///\n///   // CSS Output\n///   .element {\n///     background-color: #664a20;\n///   }\n\n@function shade(\n  $color,\n  $percent\n) {\n  @if not _is-color($color) {\n    @error \"`#{$color}` is not a valid color for the `$color` argument in \" +\n           \"the `shade` mixin.\";\n  } @else {\n    @return mix(#000, $color, $percent);\n  }\n}\n","@charset \"UTF-8\";\n\n/// Sets the `width` and `height` of the element in one statement.\n///\n/// @argument {number (with unit) | string} $width\n///\n/// @argument {number (with unit) | string} $height [$width]\n///\n/// @example scss\n///   .first-element {\n///     @include size(2em);\n///   }\n///\n///   // CSS Output\n///   .first-element {\n///     width: 2em;\n///     height: 2em;\n///   }\n///\n/// @example scss\n///   .second-element {\n///     @include size(auto, 10em);\n///   }\n///\n///   // CSS Output\n///   .second-element {\n///     width: auto;\n///     height: 10em;\n///   }\n///\n/// @require {function} _is-size\n\n@mixin size(\n  $width,\n  $height: $width\n) {\n  @if _is-size($height) {\n    height: $height;\n  } @else {\n    @error \"`#{$height}` is not a valid length for the `$height` argument \" +\n           \"in the `size` mixin.\";\n  }\n\n  @if _is-size($width) {\n    width: $width;\n  } @else {\n    @error \"`#{$width}` is not a valid length for the `$width` argument \" +\n           \"in the `size` mixin.\";\n  }\n}\n","@charset \"UTF-8\";\n\n/// Strips the unit from a number.\n///\n/// @argument {number} $value\n///\n/// @return {number (unitless)}\n///\n/// @example scss\n///   $dimension: strip-unit(10em);\n///\n///   // Output\n///   $dimension: 10;\n\n@function strip-unit($value) {\n  @return ($value / ($value * 0 + 1));\n}\n","@charset \"UTF-8\";\n\n////\n/// @type list\n///\n/// @require {function} _assign-inputs\n///\n/// @require {variable} $_text-inputs-list\n////\n\n/// A list of all _text-based_ HTML inputs. Please note that you must\n/// interpolate the variable (`#{}`) to use it as a selector.\n///\n/// @example scss\n///   #{$all-text-inputs} {\n///     border: 1px solid #ccc;\n///   }\n///\n///   // CSS Output\n///   [type='color'],\n///   [type='date'],\n///   [type='datetime'],\n///   [type='datetime-local'],\n///   [type='email'],\n///   [type='month'],\n///   [type='number'],\n///   [type='password'],\n///   [type='search'],\n///   [type='tel'],\n///   [type='text'],\n///   [type='time'],\n///   [type='url'],\n///   [type='week'],\n///   input:not([type]),\n///   textarea {\n///     border: 1px solid #ccc;\n///   }\n\n$all-text-inputs: _assign-inputs($_text-inputs-list);\n\n/// A list of all _text-based_ HTML inputs with the `:active` pseudo-class\n/// applied. Please note that you must interpolate the variable (`#{}`) to use\n/// it as a selector.\n///\n/// @example scss\n///   #{$all-text-inputs-active} {\n///     border: 1px solid #aaa;\n///   }\n///\n///   // CSS Output\n///   [type='color']:active,\n///   [type='date']:active,\n///   [type='datetime']:active,\n///   [type='datetime-local']:active,\n///   [type='email']:active,\n///   [type='month']:active,\n///   [type='number']:active,\n///   [type='password']:active,\n///   [type='search']:active,\n///   [type='tel']:active,\n///   [type='text']:active,\n///   [type='time']:active,\n///   [type='url']:active,\n///   [type='week']:active,\n///   input:not([type]):active,\n///   textarea:active {\n///     border: 1px solid #aaa;\n///   }\n\n$all-text-inputs-active: _assign-inputs($_text-inputs-list, active);\n\n/// A list of all _text-based_ HTML inputs with the `:focus` pseudo-class\n/// applied. Please note that you must interpolate the variable (`#{}`) to use\n/// it as a selector.\n///\n/// @example scss\n///   #{$all-text-inputs-focus} {\n///     border: 1px solid #1565c0;\n///   }\n///\n///   // CSS Output\n///   [type='color']:focus,\n///   [type='date']:focus,\n///   [type='datetime']:focus,\n///   [type='datetime-local']:focus,\n///   [type='email']:focus,\n///   [type='month']:focus,\n///   [type='number']:focus,\n///   [type='password']:focus,\n///   [type='search']:focus,\n///   [type='tel']:focus,\n///   [type='text']:focus,\n///   [type='time']:focus,\n///   [type='url']:focus,\n///   [type='week']:focus,\n///   input:not([type]):focus,\n///   textarea:focus {\n///     border: 1px solid #1565c0;\n///   }\n\n$all-text-inputs-focus: _assign-inputs($_text-inputs-list, focus);\n\n/// A list of all _text-based_ HTML inputs with the `:hover` pseudo-class\n/// applied. Please note that you must interpolate the variable (`#{}`) to use\n/// it as a selector.\n///\n/// @example scss\n///   #{$all-text-inputs-hover} {\n///     border: 1px solid #aaa;\n///   }\n///\n///   // CSS Output\n///   [type='color']:hover,\n///   [type='date']:hover,\n///   [type='datetime']:hover,\n///   [type='datetime-local']:hover,\n///   [type='email']:hover,\n///   [type='month']:hover,\n///   [type='number']:hover,\n///   [type='password']:hover,\n///   [type='search']:hover,\n///   [type='tel']:hover,\n///   [type='text']:hover,\n///   [type='time']:hover,\n///   [type='url']:hover,\n///   [type='week']:hover,\n///   input:not([type]):hover,\n///   textarea:hover {\n///     border: 1px solid #aaa;\n///   }\n\n$all-text-inputs-hover: _assign-inputs($_text-inputs-list, hover);\n\n/// A list of all _text-based_ HTML inputs with the `:invalid` pseudo-class\n/// applied. Please note that you must interpolate the variable (`#{}`) to use\n/// it as a selector.\n///\n/// @example scss\n///   #{$all-text-inputs-invalid} {\n///     border: 1px solid #00f;\n///   }\n///\n///   // CSS Output\n///   [type='color']:invalid,\n///   [type='date']:invalid,\n///   [type='datetime']:invalid,\n///   [type='datetime-local']:invalid,\n///   [type='email']:invalid,\n///   [type='month']:invalid,\n///   [type='number']:invalid,\n///   [type='password']:invalid,\n///   [type='search']:invalid,\n///   [type='tel']:invalid,\n///   [type='text']:invalid,\n///   [type='time']:invalid,\n///   [type='url']:invalid,\n///   [type='week']:invalid,\n///   input:not([type]):invalid,\n///   textarea:invalid {\n///     border: 1px solid #00f;\n///   }\n\n$all-text-inputs-invalid: _assign-inputs($_text-inputs-list, invalid);\n","@charset \"UTF-8\";\n\n// scss-lint:disable SpaceAfterComma, UnnecessaryMantissa, TrailingZero\n\n////\n/// CSS cubic-bezier timing functions.\n///\n/// @link https://goo.gl/p8u6SK\n///\n/// @type string\n////\n\n$ease-in-quad:      cubic-bezier(0.550,  0.085, 0.680, 0.530);\n$ease-in-cubic:     cubic-bezier(0.550,  0.055, 0.675, 0.190);\n$ease-in-quart:     cubic-bezier(0.895,  0.030, 0.685, 0.220);\n$ease-in-quint:     cubic-bezier(0.755,  0.050, 0.855, 0.060);\n$ease-in-sine:      cubic-bezier(0.470,  0.000, 0.745, 0.715);\n$ease-in-expo:      cubic-bezier(0.950,  0.050, 0.795, 0.035);\n$ease-in-circ:      cubic-bezier(0.600,  0.040, 0.980, 0.335);\n$ease-in-back:      cubic-bezier(0.600, -0.280, 0.735, 0.045);\n\n$ease-out-quad:     cubic-bezier(0.250,  0.460, 0.450, 0.940);\n$ease-out-cubic:    cubic-bezier(0.215,  0.610, 0.355, 1.000);\n$ease-out-quart:    cubic-bezier(0.165,  0.840, 0.440, 1.000);\n$ease-out-quint:    cubic-bezier(0.230,  1.000, 0.320, 1.000);\n$ease-out-sine:     cubic-bezier(0.390,  0.575, 0.565, 1.000);\n$ease-out-expo:     cubic-bezier(0.190,  1.000, 0.220, 1.000);\n$ease-out-circ:     cubic-bezier(0.075,  0.820, 0.165, 1.000);\n$ease-out-back:     cubic-bezier(0.175,  0.885, 0.320, 1.275);\n\n$ease-in-out-quad:  cubic-bezier(0.455,  0.030, 0.515, 0.955);\n$ease-in-out-cubic: cubic-bezier(0.645,  0.045, 0.355, 1.000);\n$ease-in-out-quart: cubic-bezier(0.770,  0.000, 0.175, 1.000);\n$ease-in-out-quint: cubic-bezier(0.860,  0.000, 0.070, 1.000);\n$ease-in-out-sine:  cubic-bezier(0.445,  0.050, 0.550, 0.950);\n$ease-in-out-expo:  cubic-bezier(1.000,  0.000, 0.000, 1.000);\n$ease-in-out-circ:  cubic-bezier(0.785,  0.135, 0.150, 0.860);\n$ease-in-out-back:  cubic-bezier(0.680, -0.550, 0.265, 1.550);\n","@charset \"UTF-8\";\n\n/// Mixes a color with white.\n///\n/// @argument {color} $color\n///\n/// @argument {number (percentage)} $percent\n///   The amount of white to be mixed in.\n///\n/// @return {color}\n///\n/// @example scss\n///   .element {\n///     background-color: tint(#6ecaa6, 40%);\n///   }\n///\n///   // CSS Output\n///   .element {\n///     background-color: #a8dfc9;\n///   }\n\n@function tint(\n  $color,\n  $percent\n) {\n  @if not _is-color($color) {\n    @error \"`#{$color}` is not a valid color for the `$color` argument in \" +\n           \"the `tint` mixin.\";\n  } @else {\n    @return mix(#fff, $color, $percent);\n  }\n}\n","@charset \"UTF-8\";\n\n/// Generates a triangle pointing in a specified direction.\n///\n/// @argument {string} $direction\n///   The direction the triangle should point. Accepts `up`, `up-right`,\n///   `right`, `down-right`, `down`, `down-left`, `left` or `up-left`.\n///\n/// @argument {number (with unit)} $width\n///   Width of the triangle.\n///\n/// @argument {number (with unit)} $height\n///   Height of the triangle.\n///\n/// @argument {color} $color\n///   Color of the triangle.\n///\n/// @example scss\n///   .element {\n///     &::before {\n///       @include triangle(\"up\", 2rem, 1rem, #b25c9c);\n///       content: \"\";\n///     }\n///   }\n///\n///   // CSS Output\n///   .element::before {\n///     border-style: solid;\n///     height: 0;\n///     width: 0;\n///     border-color: transparent transparent #b25c9c;\n///     border-width: 0 1rem 1rem;\n///     content: \"\";\n///   }\n\n@mixin triangle(\n  $direction,\n  $width,\n  $height,\n  $color\n) {\n  @if not index(\n    \"up\" \"up-right\" \"right\" \"down-right\" \"down\" \"down-left\" \"left\" \"up-left\",\n    $direction\n  ) {\n    @error \"Direction must be `up`, `up-right`, `right`, `down-right`, \" +\n           \"`down`, `down-left`, `left` or `up-left`.\";\n  } @else if not _is-color($color) {\n    @error \"`#{$color}` is not a valid color for the `$color` argument in \" +\n           \"the `triangle` mixin.\";\n  } @else {\n    border-style: solid;\n    height: 0;\n    width: 0;\n\n    @if $direction == \"up\" {\n      border-color: transparent transparent $color;\n      border-width: 0 ($width / 2) $height;\n    } @else if $direction == \"up-right\" {\n      border-color: transparent $color transparent transparent;\n      border-width: 0 $width $width 0;\n    } @else if $direction == \"right\" {\n      border-color: transparent transparent transparent $color;\n      border-width: ($height / 2) 0 ($height / 2) $width;\n    } @else if $direction == \"down-right\" {\n      border-color: transparent transparent $color;\n      border-width: 0 0 $width $width;\n    } @else if $direction == \"down\" {\n      border-color: $color transparent transparent;\n      border-width: $height ($width / 2) 0;\n    } @else if $direction == \"down-left\" {\n      border-color: transparent transparent transparent $color;\n      border-width: $width 0 0 $width;\n    } @else if $direction == \"left\" {\n      border-color: transparent $color transparent transparent;\n      border-width: ($height / 2) $width ($height / 2) 0;\n    } @else if $direction == \"up-left\" {\n      border-color: $color transparent transparent;\n      border-width: $width $width 0 0;\n    }\n  }\n}\n","@charset \"UTF-8\";\n\n/// Generates vendor prefixes for values.\n///\n/// @argument {string} $property\n///   Property to use.\n///\n/// @argument {string} $value\n///   Value to prefix.\n///\n/// @argument {list} $prefixes\n///   Vendor prefixes to output.\n///\n/// @example scss\n///   .element {\n///     @include value-prefixer(cursor, grab, (\"webkit\", \"moz\"));\n///   }\n///\n///   // CSS Output\n///   .element {\n///     cursor: -webkit-grab;\n///     cursor: -moz-grab;\n///     cursor: grab;\n///   }\n///\n/// @author Matthew Tobiasz\n\n@mixin value-prefixer(\n  $property,\n  $value,\n  $prefixes: ()\n) {\n  @each $prefix in $prefixes {\n    #{$property}: #{\"-\" + $prefix + \"-\" + $value};\n  }\n  #{$property}: $value;\n}\n","// Set basic variables\n$border-width:1px;\n$border-color: #CCCCCC;\n//@include border(border,$border-width,$border-color);\n\n@mixin border($var-direction: \"border\", $var-width: $border-width, $var-color: $border-color) {\n    @if $var-direction == 'border'{\n        border: $var-width solid $var-color;\n    }\n    @if $var-direction == 'border-bottom'{\n        border-bottom: $var-width solid $var-color;\n    }\n    @if $var-direction == 'border-top'{\n        border-top: $var-width solid $var-color;\n    }\n    @if $var-direction == 'border-right'{\n        border-right: $var-width solid $var-color;\n    }\n    @if $var-direction == 'border-left'{\n        border-left: $var-width solid $var-color;\n    }\n    @if $var-direction == 'border-tb'{\n        border-bottom: $var-width solid $var-color;\n        border-top:    $var-width solid $var-color;\n    }\n    @if $var-direction == 'border-lr'{\n        border-left: $var-width solid $var-color;\n        border-right: $var-width solid $var-color;\n    }\n    @if $var-direction == 'border-no-top'{\n        border: $var-width solid $var-color;\n        border-top: none;\n    }\n    @if $var-direction == 'border-no-bottom'{\n        border:        $var-width solid $var-color;\n        border-bottom: none;\n    }\n}\n"],"names":[],"mappings":"ACCA,AAAA,KAAK,AAAC,CACJ,eAAe,CAAA,mUAAC,CAChB,eAAe,CAAA,mUAAC,CAChB,eAAe,CAAA,mUAAC,CAEhB,MAAM,CAAA,QAAC,CACP,OAAO,CAAA,QAAC,CACR,OAAO,CAAA,QAAC,CACR,QAAQ,CAAA,QAAC,CACT,KAAK,CAAA,QAAC,CACN,OAAO,CAAA,QAAC,CACR,QAAQ,CAAA,QAAC,CACT,QAAQ,CAAA,QAAC,CACT,MAAM,CAAA,QAAC,CACP,QAAQ,CAAA,QAAC,CACT,MAAM,CAAA,QAAC,CACP,MAAM,CAAA,QAAC,CAEP,SAAS,CAAA,KAAC,CACV,MAAM,CAAA,wBAAC,CACP,QAAQ,CAAA,wBAAC,CACT,UAAU,CAAA,wBAAC,CACX,UAAU,CAAA,wBAAC,CACX,UAAU,CAAA,wBAAC,CACX,UAAU,CAAA,wBAAC,CACX,UAAU,CAAA,YAAC,CAEX,eAAe,CAAA,YAAC,CAChB,iBAAiB,CAAA,aAAC,CAClB,gBAAgB,CAAA,cAAC,CAEjB,WAAW,CAAA,QAAC,CACZ,aAAa,CAAA,QAAC,CACd,aAAa,CAAA,QAAC,CACd,aAAa,CAAA,OAAC,CACd,aAAa,CAAA,QAAC,CACd,aAAa,CAAA,qBAAC,CACd,aAAa,CAAA,QAAC,CACd,aAAa,CAAA,QAAC,CAEd,aAAa,CAAA,QAAC,CACd,eAAe,CAAA,QAAC,CAChB,eAAe,CAAA,QAAC,CAChB,eAAe,CAAA,uBAAC,CAEhB,YAAY,CAAA,QAAC,CACb,cAAc,CAAA,QAAC,CACf,cAAc,CAAA,sBAAC,CAEf,OAAO,CAAA,QAAC,CACR,SAAS,CAAA,QAAC,CACV,SAAS,CAAA,WAAC,CACX,ADnDD,AAAA,CAAC,AAAC,CACA,KAAK,CCyES,oBAAoB,CDjEnC,AATD,AAEE,CAFD,AAEE,MAAM,AAAC,CACN,OAAO,CAAE,GAAG,CACZ,KAAK,CCsEO,oBAAoB,CDrEjC,AALH,AAME,CAND,AAME,MAAM,AAAC,CACN,OAAO,CAAE,CAAC,CACb,AAED,AAAA,gBAAgB,AAAC,CACf,cAAc,CAAE,qBAAqB,CACtC,AACD,AAAA,eAAe,AAAC,CACd,cAAc,CAAE,oBAAoB,CACrC,AACD,AAAA,eAAe,AAAC,CACd,cAAc,CAAE,oBAAoB,CACrC,AACD,AAAA,kBAAkB,AAAC,CACjB,cAAc,CAAE,oBAAoB,CAIrC,AALD,AAEE,kBAFgB,AAEf,cAAc,AAAC,CACd,cAAc,CAAE,oBAAoB,CACrC,AAEH,AAAA,aAAa,AAAC,CACZ,cAAc,CAAE,kBAAkB,CACnC,AACD,AAAA,SAAS,AAAA,CACP,WAAW,CAAE,MAAM,CACnB,QAAQ,CAAE,MAAM,CAChB,aAAa,CAAE,QAAQ,CACvB,MAAM,CAAE,OAAO,CAChB,AACD,AAAA,WAAW,AAAC,CACV,UAAU,CAAE,UAAU,CACvB,AACD,AAAA,mBAAmB,AAAC,CAClB,WAAW,CAAE,iBAAiB,CAC/B,AACD,AAAA,iBAAiB,AAAC,CAChB,WAAW,CAAE,eAAe,CAC7B,AACD,AAAA,mBAAmB,AAAC,CAClB,WAAW,CAAE,iBAAiB,CAC/B,AACD,AAAA,YAAY,AAAC,CACX,UAAU,CAAE,MAAM,CACnB,AACD,AAAA,YAAY,AAAC,CACX,MAAM,CAAE,eAAe,CACxB,AACD,AAAA,eAAe,AAAC,CACd,MAAM,CAAE,kBAAkB,CAC3B,AACD,AAAA,UAAU,AAAC,CACT,cAAc,CAAE,iBAAiB,CAClC,AACD,AAAA,UAAU,AAAC,CACT,cAAc,CAAE,MAAM,CACvB,AACD,AAAA,YAAY,AAAC,CACX,UAAU,CAAE,iBAAiB,CAC9B,AAED,AACE,CADD,CAAA,AAAA,GAAC,CAAI,KAAK,AAAT,EACA,WAAW,AAAC,CACV,UAAU,CAAE,KAAK,CAClB,AAHH,AAIE,CAJD,CAAA,AAAA,GAAC,CAAI,KAAK,AAAT,EAIA,UAAU,AAAC,CACT,UAAU,CAAE,IAAI,CACjB,AAGH,AACE,CADD,CAAA,AAAA,GAAC,CAAI,KAAK,AAAT,EACA,WAAW,AAAC,CACV,UAAU,CAAE,IAAI,CACjB,AAHH,AAIE,CAJD,CAAA,AAAA,GAAC,CAAI,KAAK,AAAT,EAIA,UAAU,AAAC,CACT,UAAU,CAAE,KAAK,CAClB"}